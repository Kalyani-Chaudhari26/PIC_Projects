

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 26 12:10:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0004                     fsr             equ	4
    59     0004                     fsr0            equ	4
    60     0000                     indf            equ	0
    61     0000                     indf0           equ	0
    62     0002                     pc              equ	2
    63     0002                     pcl             equ	2
    64     000A                     pclath          equ	10
    65     0003                     status          equ	3
    66     0000                     INDF            equ	0	;# 
    67     0001                     TMR0            equ	1	;# 
    68     0002                     PCL             equ	2	;# 
    69     0003                     STATUS          equ	3	;# 
    70     0004                     FSR             equ	4	;# 
    71     0005                     PORTA           equ	5	;# 
    72     0006                     PORTB           equ	6	;# 
    73     0007                     PORTC           equ	7	;# 
    74     0008                     PORTD           equ	8	;# 
    75     0009                     PORTE           equ	9	;# 
    76     000A                     PCLATH          equ	10	;# 
    77     000B                     INTCON          equ	11	;# 
    78     000C                     PIR1            equ	12	;# 
    79     000D                     PIR2            equ	13	;# 
    80     000E                     TMR1            equ	14	;# 
    81     000E                     TMR1L           equ	14	;# 
    82     000F                     TMR1H           equ	15	;# 
    83     0010                     T1CON           equ	16	;# 
    84     0011                     TMR2            equ	17	;# 
    85     0012                     T2CON           equ	18	;# 
    86     0013                     SSPBUF          equ	19	;# 
    87     0014                     SSPCON          equ	20	;# 
    88     0015                     CCPR1           equ	21	;# 
    89     0015                     CCPR1L          equ	21	;# 
    90     0016                     CCPR1H          equ	22	;# 
    91     0017                     CCP1CON         equ	23	;# 
    92     0018                     RCSTA           equ	24	;# 
    93     0019                     TXREG           equ	25	;# 
    94     001A                     RCREG           equ	26	;# 
    95     001B                     CCPR2           equ	27	;# 
    96     001B                     CCPR2L          equ	27	;# 
    97     001C                     CCPR2H          equ	28	;# 
    98     001D                     CCP2CON         equ	29	;# 
    99     001E                     ADRESH          equ	30	;# 
   100     001F                     ADCON0          equ	31	;# 
   101     0081                     OPTION_REG      equ	129	;# 
   102     0085                     TRISA           equ	133	;# 
   103     0086                     TRISB           equ	134	;# 
   104     0087                     TRISC           equ	135	;# 
   105     0088                     TRISD           equ	136	;# 
   106     0089                     TRISE           equ	137	;# 
   107     008C                     PIE1            equ	140	;# 
   108     008D                     PIE2            equ	141	;# 
   109     008E                     PCON            equ	142	;# 
   110     0091                     SSPCON2         equ	145	;# 
   111     0092                     PR2             equ	146	;# 
   112     0093                     SSPADD          equ	147	;# 
   113     0094                     SSPSTAT         equ	148	;# 
   114     0098                     TXSTA           equ	152	;# 
   115     0099                     SPBRG           equ	153	;# 
   116     009C                     CMCON           equ	156	;# 
   117     009D                     CVRCON          equ	157	;# 
   118     009E                     ADRESL          equ	158	;# 
   119     009F                     ADCON1          equ	159	;# 
   120     010C                     EEDATA          equ	268	;# 
   121     010D                     EEADR           equ	269	;# 
   122     010E                     EEDATH          equ	270	;# 
   123     010F                     EEADRH          equ	271	;# 
   124     018C                     EECON1          equ	396	;# 
   125     018D                     EECON2          equ	397	;# 
   126     0000                     INDF            equ	0	;# 
   127     0001                     TMR0            equ	1	;# 
   128     0002                     PCL             equ	2	;# 
   129     0003                     STATUS          equ	3	;# 
   130     0004                     FSR             equ	4	;# 
   131     0005                     PORTA           equ	5	;# 
   132     0006                     PORTB           equ	6	;# 
   133     0007                     PORTC           equ	7	;# 
   134     0008                     PORTD           equ	8	;# 
   135     0009                     PORTE           equ	9	;# 
   136     000A                     PCLATH          equ	10	;# 
   137     000B                     INTCON          equ	11	;# 
   138     000C                     PIR1            equ	12	;# 
   139     000D                     PIR2            equ	13	;# 
   140     000E                     TMR1            equ	14	;# 
   141     000E                     TMR1L           equ	14	;# 
   142     000F                     TMR1H           equ	15	;# 
   143     0010                     T1CON           equ	16	;# 
   144     0011                     TMR2            equ	17	;# 
   145     0012                     T2CON           equ	18	;# 
   146     0013                     SSPBUF          equ	19	;# 
   147     0014                     SSPCON          equ	20	;# 
   148     0015                     CCPR1           equ	21	;# 
   149     0015                     CCPR1L          equ	21	;# 
   150     0016                     CCPR1H          equ	22	;# 
   151     0017                     CCP1CON         equ	23	;# 
   152     0018                     RCSTA           equ	24	;# 
   153     0019                     TXREG           equ	25	;# 
   154     001A                     RCREG           equ	26	;# 
   155     001B                     CCPR2           equ	27	;# 
   156     001B                     CCPR2L          equ	27	;# 
   157     001C                     CCPR2H          equ	28	;# 
   158     001D                     CCP2CON         equ	29	;# 
   159     001E                     ADRESH          equ	30	;# 
   160     001F                     ADCON0          equ	31	;# 
   161     0081                     OPTION_REG      equ	129	;# 
   162     0085                     TRISA           equ	133	;# 
   163     0086                     TRISB           equ	134	;# 
   164     0087                     TRISC           equ	135	;# 
   165     0088                     TRISD           equ	136	;# 
   166     0089                     TRISE           equ	137	;# 
   167     008C                     PIE1            equ	140	;# 
   168     008D                     PIE2            equ	141	;# 
   169     008E                     PCON            equ	142	;# 
   170     0091                     SSPCON2         equ	145	;# 
   171     0092                     PR2             equ	146	;# 
   172     0093                     SSPADD          equ	147	;# 
   173     0094                     SSPSTAT         equ	148	;# 
   174     0098                     TXSTA           equ	152	;# 
   175     0099                     SPBRG           equ	153	;# 
   176     009C                     CMCON           equ	156	;# 
   177     009D                     CVRCON          equ	157	;# 
   178     009E                     ADRESL          equ	158	;# 
   179     009F                     ADCON1          equ	159	;# 
   180     010C                     EEDATA          equ	268	;# 
   181     010D                     EEADR           equ	269	;# 
   182     010E                     EEDATH          equ	270	;# 
   183     010F                     EEADRH          equ	271	;# 
   184     018C                     EECON1          equ	396	;# 
   185     018D                     EECON2          equ	397	;# 
   186                           
   187                           	psect	idataBANK0
   188     051D                     __pidataBANK0:
   189                           
   190                           ;initializer for _array
   191     051D  3453               	retlw	83
   192     051E  3445               	retlw	69
   193     051F  3454               	retlw	84
   194     0520  3420               	retlw	32
   195     0521  3453               	retlw	83
   196     0522  3450               	retlw	80
   197     0523  3444               	retlw	68
   198     0524  343A               	retlw	58
   199     0525  3420               	retlw	32
   200     0526  3420               	retlw	32
   201     0527  3420               	retlw	32
   202     0528  3420               	retlw	32
   203     0529  3472               	retlw	114
   204     052A  3470               	retlw	112
   205     052B  346D               	retlw	109
   206     0008                     _PORTD          set	8
   207     0007                     _PORTC          set	7
   208     0006                     _PORTB          set	6
   209     0081                     _OPTION_REG     set	129
   210     0086                     _TRISB          set	134
   211     0088                     _TRISD          set	136
   212     0087                     _TRISC          set	135
   213                           
   214                           	psect	cinit
   215     07DE                     start_initialization:	
   216                           ; #config settings
   217                           
   218     07DE                     __initialization:
   219                           
   220                           ; Initialize objects allocated to BANK0
   221     07DE  1383               	bcf	3,7	;select IRP bank0
   222     07DF  303E               	movlw	low (__pdataBANK0+15)
   223     07E0  00FD               	movwf	btemp+-1
   224     07E1  3005               	movlw	high __pidataBANK0
   225     07E2  00FE               	movwf	btemp
   226     07E3  301D               	movlw	low __pidataBANK0
   227     07E4  00FF               	movwf	btemp+1
   228     07E5  302F               	movlw	low __pdataBANK0
   229     07E6  0084               	movwf	4
   230     07E7  120A  118A  2568  120A  118A  	fcall	init_ram0
   231                           
   232                           ; Clear objects allocated to BANK0
   233     07EC  01A0               	clrf	__pbssBANK0& (0+127)
   234     07ED  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   235     07EE  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   236     07EF  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   237     07F0  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   238     07F1  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   239     07F2  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   240     07F3  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   241     07F4  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   242     07F5  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   243     07F6  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   244     07F7  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   245     07F8  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   246     07F9  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   247     07FA  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   248                           
   249                           ; Clear objects allocated to COMMON
   250     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   251     07FC                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254     07FC                     __end_of__initialization:
   255     07FC  0183               	clrf	3
   256     07FD  120A  118A  2D0F   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMMON
   259     007D                     __pbssCOMMON:
   260     007D                     _x:
   261     007D                     	ds	1
   262                           
   263                           	psect	bssBANK0
   264     0020                     __pbssBANK0:
   265     0020                     _d4:
   266     0020                     	ds	2
   267     0022                     _d3:
   268     0022                     	ds	2
   269     0024                     _d2:
   270     0024                     	ds	2
   271     0026                     _d1:
   272     0026                     	ds	2
   273     0028                     _j:
   274     0028                     	ds	2
   275     002A                     _i:
   276     002A                     	ds	2
   277     002C                     _value:
   278     002C                     	ds	1
   279     002D                     _n:
   280     002D                     	ds	1
   281     002E                     _m:
   282     002E                     	ds	1
   283                           
   284                           	psect	dataBANK0
   285     002F                     __pdataBANK0:
   286     002F                     _array:
   287     002F                     	ds	15
   288                           
   289                           	psect	inittext
   290     0564                     init_fetch0:	
   291                           ;	Called with low address in FSR and high address in W
   292                           
   293     0564  087E               	movf	btemp,w
   294     0565  008A               	movwf	10
   295     0566  087F               	movf	btemp+1,w
   296     0567  0082               	movwf	2
   297     0568                     init_ram0:	
   298                           ;Called with:
   299                           ;	high address of idata address in btemp 
   300                           ;	low address of idata address in btemp+1 
   301                           ;	low address of data in FSR
   302                           ;	high address + 1 of data in btemp-1
   303                           
   304     0568  120A  118A  2564  120A  118A  	fcall	init_fetch0
   305     056D  0080               	movwf	0
   306     056E  0A84               	incf	4,f
   307     056F  0804               	movf	4,w
   308     0570  067D               	xorwf	btemp+-1,w
   309     0571  1903               	btfsc	3,2
   310     0572  3400               	retlw	0
   311     0573  0AFF               	incf	btemp+1,f
   312     0574  1903               	btfsc	3,2
   313     0575  0AFE               	incf	btemp,f
   314     0576  2D68               	goto	init_ram0
   315                           
   316                           	psect	cstackCOMMON
   317     0070                     __pcstackCOMMON:
   318     0070                     ?_init:
   319     0070                     ?_keyscane:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_Lcd_Command:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?_Lcd_Data:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?___bmul:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?___wmul:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ___bmul@multiplicand:	
   338                           ; 2 bytes @ 0x0
   339                           
   340     0070                     ___wmul@multiplier:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ??_Lcd_Command:	
   344                           ; 2 bytes @ 0x0
   345                           
   346     0070                     ??_Lcd_Data:	
   347                           ; 1 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351     0070                     	ds	1
   352     0071                     ___bmul@product:
   353     0071                     ??___bmul:	
   354                           ; 1 bytes @ 0x1
   355                           
   356                           
   357                           ; 1 bytes @ 0x1
   358     0071                     	ds	1
   359     0072                     Lcd_Command@i:
   360     0072                     Lcd_Data@i:	
   361                           ; 1 bytes @ 0x2
   362                           
   363     0072                     ___bmul@multiplier:	
   364                           ; 1 bytes @ 0x2
   365                           
   366     0072                     ___wmul@multiplicand:	
   367                           ; 1 bytes @ 0x2
   368                           
   369                           
   370                           ; 2 bytes @ 0x2
   371     0072                     	ds	1
   372     0073                     ??_init:
   373                           
   374                           ; 1 bytes @ 0x3
   375     0073                     	ds	1
   376     0074                     ___wmul@product:
   377     0074                     ??___wmul:	
   378                           ; 2 bytes @ 0x4
   379                           
   380                           
   381                           ; 1 bytes @ 0x4
   382     0074                     	ds	2
   383     0076                     ?___lwdiv:
   384     0076                     ___lwdiv@divisor:	
   385                           ; 2 bytes @ 0x6
   386                           
   387                           
   388                           ; 2 bytes @ 0x6
   389     0076                     	ds	2
   390     0078                     ___lwdiv@dividend:
   391                           
   392                           ; 2 bytes @ 0x8
   393     0078                     	ds	2
   394     007A                     ___lwdiv@quotient:
   395     007A                     ??___lwdiv:	
   396                           ; 2 bytes @ 0xA
   397                           
   398                           
   399                           ; 1 bytes @ 0xA
   400     007A                     	ds	2
   401     007C                     ___lwdiv@counter:
   402                           
   403                           ; 1 bytes @ 0xC
   404     007C                     	ds	1
   405     007D                     ??_keyscane:
   406     007D                     ??_main:	
   407                           ; 1 bytes @ 0xD
   408                           
   409                           
   410                           	psect	cstackBANK0
   411     003E                     __pcstackBANK0:	
   412                           ; 1 bytes @ 0xD
   413                           
   414     003E                     ?_Lcdoutput:
   415     003E                     Lcdoutput@i:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           ; 2 bytes @ 0x0
   420     003E                     	ds	2
   421     0040                     ??_Lcdoutput:
   422                           
   423                           ; 1 bytes @ 0x2
   424     0040                     	ds	6
   425                           
   426                           	psect	maintext
   427     050F                     __pmaintext:	
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 28 in file "class4_set.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : B00/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels required when called: 3
   453 ;; This function calls:
   454 ;;		_init
   455 ;;		_keyscane
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     050F                     _main:	
   462                           ;psect for function _main
   463                           
   464     050F                     l971:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;class4_set.c: 30:     init();
   470     050F  120A  118A  25DE  120A  118A  	fcall	_init
   471     0514                     l973:
   472                           
   473                           ;class4_set.c: 32:     {;class4_set.c: 33:         keyscane();
   474     0514  120A  118A  2649  120A  118A  	fcall	_keyscane
   475     0519  2D14               	goto	l973
   476     051A  120A  118A  2800   	ljmp	start
   477     051D                     __end_of_main:
   478                           
   479                           	psect	text1
   480     0649                     __ptext1:	
   481 ;; *************** function _keyscane *****************
   482 ;; Defined at:
   483 ;;		line 68 in file "class4_set.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 2
   504 ;; This function calls:
   505 ;;		_Lcd_Command
   506 ;;		_Lcd_Data
   507 ;;		_Lcdoutput
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513     0649                     _keyscane:	
   514                           ;psect for function _keyscane
   515                           
   516     0649                     l909:	
   517                           ;incstack = 0
   518                           ; Regs used in _keyscane: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;class4_set.c: 70:     value = PORTB &0xF0;
   522     0649  1283               	bcf	3,5	;RP0=0, select bank0
   523     064A  1303               	bcf	3,6	;RP1=0, select bank0
   524     064B  0806               	movf	6,w	;volatile
   525     064C  00AC               	movwf	_value
   526     064D                     l911:
   527     064D  30F0               	movlw	240
   528     064E  05AC               	andwf	_value,f
   529                           
   530                           ;class4_set.c: 71:     switch(value){
   531     064F  2EE4               	goto	l969
   532     0650                     l913:
   533                           
   534                           ;class4_set.c: 73:         Lcd_Command(0x80);
   535     0650  3080               	movlw	128
   536     0651  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   537     0656                     l915:
   538                           
   539                           ;class4_set.c: 74:         for(x=0; x<8; x++)
   540     0656  01FD               	clrf	_x
   541     0657                     l921:
   542                           
   543                           ;class4_set.c: 75:         {;class4_set.c: 76:             Lcd_Data(array[x]);
   544     0657  087D               	movf	_x,w
   545     0658  3E2F               	addlw	(low (_array| 0))& (0+255)
   546     0659  0084               	movwf	4
   547     065A  1383               	bcf	3,7	;select IRP bank0
   548     065B  0800               	movf	0,w
   549     065C  120A  118A  252C  120A  118A  	fcall	_Lcd_Data
   550     0661                     l923:
   551                           
   552                           ;class4_set.c: 77:         }
   553     0661  3001               	movlw	1
   554     0662  07FD               	addwf	_x,f
   555     0663                     l925:
   556     0663  3008               	movlw	8
   557     0664  027D               	subwf	_x,w
   558     0665  1C03               	skipc
   559     0666  2E68               	goto	u311
   560     0667  2E69               	goto	u310
   561     0668                     u311:
   562     0668  2E57               	goto	l921
   563     0669                     u310:
   564     0669                     l927:
   565                           
   566                           ;class4_set.c: 78:         Lcd_Command(0X8C);
   567     0669  308C               	movlw	140
   568     066A  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   569     066F                     l929:
   570                           
   571                           ;class4_set.c: 79:         for(x=12; x<15; x++)
   572     066F  300C               	movlw	12
   573     0670  00FD               	movwf	_x
   574     0671                     l935:
   575                           
   576                           ;class4_set.c: 80:         {;class4_set.c: 81:             Lcd_Data(array[x]);
   577     0671  087D               	movf	_x,w
   578     0672  3E2F               	addlw	(low (_array| 0))& (0+255)
   579     0673  0084               	movwf	4
   580     0674  1383               	bcf	3,7	;select IRP bank0
   581     0675  0800               	movf	0,w
   582     0676  120A  118A  252C  120A  118A  	fcall	_Lcd_Data
   583     067B                     l937:
   584                           
   585                           ;class4_set.c: 82:         }
   586     067B  3001               	movlw	1
   587     067C  07FD               	addwf	_x,f
   588     067D                     l939:
   589     067D  300F               	movlw	15
   590     067E  027D               	subwf	_x,w
   591     067F  1C03               	skipc
   592     0680  2E82               	goto	u321
   593     0681  2E83               	goto	u320
   594     0682                     u321:
   595     0682  2E71               	goto	l935
   596     0683                     u320:
   597     0683                     l941:
   598                           
   599                           ;class4_set.c: 83:         Lcd_Command(0X88);
   600     0683  3088               	movlw	136
   601     0684  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   602                           
   603                           ;class4_set.c: 84:         Lcdoutput(j);
   604     0689  1283               	bcf	3,5	;RP0=0, select bank0
   605     068A  1303               	bcf	3,6	;RP1=0, select bank0
   606     068B  0829               	movf	_j+1,w
   607     068C  00BF               	movwf	Lcdoutput@i+1
   608     068D  0828               	movf	_j,w
   609     068E  00BE               	movwf	Lcdoutput@i
   610     068F  120A  118A  26F3  120A  118A  	fcall	_Lcdoutput
   611                           
   612                           ;class4_set.c: 85:         break;
   613     0694  2EF2               	goto	l74
   614     0695                     l943:
   615                           
   616                           ;class4_set.c: 88:     j++;
   617     0695  3001               	movlw	1
   618     0696  07A8               	addwf	_j,f
   619     0697  1803               	skipnc
   620     0698  0AA9               	incf	_j+1,f
   621     0699  3000               	movlw	0
   622     069A  07A9               	addwf	_j+1,f
   623                           
   624                           ;class4_set.c: 89:     if(j > 5000)
   625     069B  3013               	movlw	19
   626     069C  0229               	subwf	_j+1,w
   627     069D  3089               	movlw	137
   628     069E  1903               	skipnz
   629     069F  0228               	subwf	_j,w
   630     06A0  1C03               	skipc
   631     06A1  2EA3               	goto	u331
   632     06A2  2EA4               	goto	u330
   633     06A3                     u331:
   634     06A3  2EA8               	goto	l947
   635     06A4                     u330:
   636     06A4                     l945:
   637                           
   638                           ;class4_set.c: 90:     {;class4_set.c: 91:         j = 5000;
   639     06A4  3088               	movlw	136
   640     06A5  00A8               	movwf	_j
   641     06A6  3013               	movlw	19
   642     06A7  00A9               	movwf	_j+1
   643     06A8                     l947:
   644                           
   645                           ;class4_set.c: 93:     Lcd_Command(0X88);
   646     06A8  3088               	movlw	136
   647     06A9  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   648     06AE                     l949:
   649                           
   650                           ;class4_set.c: 94:     Lcdoutput(j);
   651     06AE  1283               	bcf	3,5	;RP0=0, select bank0
   652     06AF  1303               	bcf	3,6	;RP1=0, select bank0
   653     06B0  0829               	movf	_j+1,w
   654     06B1  00BF               	movwf	Lcdoutput@i+1
   655     06B2  0828               	movf	_j,w
   656     06B3  00BE               	movwf	Lcdoutput@i
   657     06B4  120A  118A  26F3  120A  118A  	fcall	_Lcdoutput
   658                           
   659                           ;class4_set.c: 95:     break;
   660     06B9  2EF2               	goto	l74
   661     06BA                     l951:
   662                           
   663                           ;class4_set.c: 98:     j--;
   664     06BA  3001               	movlw	1
   665     06BB  02A8               	subwf	_j,f
   666     06BC  3000               	movlw	0
   667     06BD  1C03               	skipc
   668     06BE  03A9               	decf	_j+1,f
   669     06BF  02A9               	subwf	_j+1,f
   670     06C0                     l953:
   671                           
   672                           ;class4_set.c: 99:     if(j < 1)
   673     06C0  0828               	movf	_j,w
   674     06C1  0429               	iorwf	_j+1,w
   675     06C2  1D03               	btfss	3,2
   676     06C3  2EC5               	goto	u341
   677     06C4  2EC6               	goto	u340
   678     06C5                     u341:
   679     06C5  2ECA               	goto	l957
   680     06C6                     u340:
   681     06C6                     l955:
   682                           
   683                           ;class4_set.c: 100:     {;class4_set.c: 101:         j = 1;
   684     06C6  3001               	movlw	1
   685     06C7  00A8               	movwf	_j
   686     06C8  3000               	movlw	0
   687     06C9  00A9               	movwf	_j+1
   688     06CA                     l957:
   689                           
   690                           ;class4_set.c: 103:     Lcd_Command(0X88);
   691     06CA  3088               	movlw	136
   692     06CB  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   693     06D0  2EAE               	goto	l949
   694     06D1                     l961:
   695                           
   696                           ;class4_set.c: 108:     j=0;
   697     06D1  01A8               	clrf	_j
   698     06D2  01A9               	clrf	_j+1
   699     06D3                     l963:
   700                           
   701                           ;class4_set.c: 109:     Lcd_Command(0X88);
   702     06D3  3088               	movlw	136
   703     06D4  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   704     06D9                     l965:
   705                           
   706                           ;class4_set.c: 110:     Lcdoutput(j);
   707     06D9  3000               	movlw	0
   708     06DA  1283               	bcf	3,5	;RP0=0, select bank0
   709     06DB  1303               	bcf	3,6	;RP1=0, select bank0
   710     06DC  00BE               	movwf	Lcdoutput@i
   711     06DD  00BF               	movwf	Lcdoutput@i+1
   712     06DE  120A  118A  26F3  120A  118A  	fcall	_Lcdoutput
   713                           
   714                           ;class4_set.c: 111:     break;
   715     06E3  2EF2               	goto	l74
   716     06E4                     l969:
   717     06E4  082C               	movf	_value,w
   718                           
   719                           ; Switch size 1, requested type "simple"
   720                           ; Number of cases is 4, Range of values is 112 to 224
   721                           ; switch strategies available:
   722                           ; Name         Instructions Cycles
   723                           ; simple_byte           13     7 (average)
   724                           ; jumptable            263     9 (fixed)
   725                           ;	Chosen strategy is simple_byte
   726     06E5  3A70               	xorlw	112	; case 112
   727     06E6  1903               	skipnz
   728     06E7  2ED1               	goto	l961
   729     06E8  3AC0               	xorlw	192	; case 176
   730     06E9  1903               	skipnz
   731     06EA  2EBA               	goto	l951
   732     06EB  3A60               	xorlw	96	; case 208
   733     06EC  1903               	skipnz
   734     06ED  2E95               	goto	l943
   735     06EE  3A30               	xorlw	48	; case 224
   736     06EF  1903               	skipnz
   737     06F0  2E50               	goto	l913
   738     06F1  2EF2               	goto	l74
   739     06F2                     l74:
   740     06F2  0008               	return
   741     06F3                     __end_of_keyscane:
   742                           
   743                           	psect	text2
   744     06F3                     __ptext2:	
   745 ;; *************** function _Lcdoutput *****************
   746 ;; Defined at:
   747 ;;		line 130 in file "class4_set.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  i               2    0[BANK0 ] unsigned int 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       2       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       6       0       0       0
   764 ;;      Totals:         0       8       0       0       0
   765 ;;Total ram usage:        8 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; Hardware stack levels required when called: 1
   768 ;; This function calls:
   769 ;;		_Lcd_Command
   770 ;;		_Lcd_Data
   771 ;;		___bmul
   772 ;;		___lwdiv
   773 ;;		___wmul
   774 ;; This function is called by:
   775 ;;		_keyscane
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     06F3                     _Lcdoutput:	
   780                           ;psect for function _Lcdoutput
   781                           
   782     06F3                     l873:	
   783                           ;incstack = 0
   784                           ; Regs used in _Lcdoutput: [wreg+status,2+status,0+pclath+cstack]
   785                           
   786                           
   787                           ;class4_set.c: 130: void Lcdoutput(unsigned int i);class4_set.c: 131:   {;class4_set.c: 
      +                          132:     d4 = (unsigned char)(i / 1000);
   788     06F3  30E8               	movlw	232
   789     06F4  00F6               	movwf	___lwdiv@divisor
   790     06F5  3003               	movlw	3
   791     06F6  00F7               	movwf	___lwdiv@divisor+1
   792     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   793     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   794     06F9  083F               	movf	Lcdoutput@i+1,w
   795     06FA  00F9               	movwf	___lwdiv@dividend+1
   796     06FB  083E               	movf	Lcdoutput@i,w
   797     06FC  00F8               	movwf	___lwdiv@dividend
   798     06FD  120A  118A  259C  120A  118A  	fcall	___lwdiv
   799     0702  0876               	movf	?___lwdiv,w
   800     0703  1283               	bcf	3,5	;RP0=0, select bank0
   801     0704  1303               	bcf	3,6	;RP1=0, select bank0
   802     0705  00C0               	movwf	??_Lcdoutput
   803     0706  01C1               	clrf	??_Lcdoutput+1
   804     0707  0840               	movf	??_Lcdoutput,w
   805     0708  00A0               	movwf	_d4
   806     0709  0841               	movf	??_Lcdoutput+1,w
   807     070A  00A1               	movwf	_d4+1
   808                           
   809                           ;class4_set.c: 133:     d3 = (unsigned char)((i - (d4 * 1000)) / 100);
   810     070B  3064               	movlw	100
   811     070C  00F6               	movwf	___lwdiv@divisor
   812     070D  3000               	movlw	0
   813     070E  00F7               	movwf	___lwdiv@divisor+1
   814     070F  0821               	movf	_d4+1,w
   815     0710  00F1               	movwf	___wmul@multiplier+1
   816     0711  0820               	movf	_d4,w
   817     0712  00F0               	movwf	___wmul@multiplier
   818     0713  3018               	movlw	24
   819     0714  00F2               	movwf	___wmul@multiplicand
   820     0715  30FC               	movlw	252
   821     0716  00F3               	movwf	___wmul@multiplicand+1
   822     0717  120A  118A  2577  120A  118A  	fcall	___wmul
   823     071C  1283               	bcf	3,5	;RP0=0, select bank0
   824     071D  1303               	bcf	3,6	;RP1=0, select bank0
   825     071E  083E               	movf	Lcdoutput@i,w
   826     071F  0770               	addwf	?___wmul,w
   827     0720  00F8               	movwf	___lwdiv@dividend
   828     0721  083F               	movf	Lcdoutput@i+1,w
   829     0722  1803               	skipnc
   830     0723  0A3F               	incf	Lcdoutput@i+1,w
   831     0724  0771               	addwf	?___wmul+1,w
   832     0725  00F9               	movwf	___lwdiv@dividend+1
   833     0726  120A  118A  259C  120A  118A  	fcall	___lwdiv
   834     072B  0876               	movf	?___lwdiv,w
   835     072C  1283               	bcf	3,5	;RP0=0, select bank0
   836     072D  1303               	bcf	3,6	;RP1=0, select bank0
   837     072E  00C0               	movwf	??_Lcdoutput
   838     072F  01C1               	clrf	??_Lcdoutput+1
   839     0730  0840               	movf	??_Lcdoutput,w
   840     0731  00A2               	movwf	_d3
   841     0732  0841               	movf	??_Lcdoutput+1,w
   842     0733  00A3               	movwf	_d3+1
   843                           
   844                           ;class4_set.c: 134:     d2 = (unsigned char)((i - (d4 * 1000) - (d3 * 100)) / 10);
   845     0734  300A               	movlw	10
   846     0735  00F6               	movwf	___lwdiv@divisor
   847     0736  3000               	movlw	0
   848     0737  00F7               	movwf	___lwdiv@divisor+1
   849     0738  0821               	movf	_d4+1,w
   850     0739  00F1               	movwf	___wmul@multiplier+1
   851     073A  0820               	movf	_d4,w
   852     073B  00F0               	movwf	___wmul@multiplier
   853     073C  3018               	movlw	24
   854     073D  00F2               	movwf	___wmul@multiplicand
   855     073E  30FC               	movlw	252
   856     073F  00F3               	movwf	___wmul@multiplicand+1
   857     0740  120A  118A  2577  120A  118A  	fcall	___wmul
   858     0745  0870               	movf	?___wmul,w
   859     0746  1283               	bcf	3,5	;RP0=0, select bank0
   860     0747  1303               	bcf	3,6	;RP1=0, select bank0
   861     0748  00C0               	movwf	??_Lcdoutput
   862     0749  0871               	movf	?___wmul+1,w
   863     074A  00C1               	movwf	??_Lcdoutput+1
   864     074B  0823               	movf	_d3+1,w
   865     074C  00F1               	movwf	___wmul@multiplier+1
   866     074D  0822               	movf	_d3,w
   867     074E  00F0               	movwf	___wmul@multiplier
   868     074F  309C               	movlw	156
   869     0750  00F2               	movwf	___wmul@multiplicand
   870     0751  30FF               	movlw	255
   871     0752  00F3               	movwf	___wmul@multiplicand+1
   872     0753  120A  118A  2577  120A  118A  	fcall	___wmul
   873     0758  0870               	movf	?___wmul,w
   874     0759  1283               	bcf	3,5	;RP0=0, select bank0
   875     075A  1303               	bcf	3,6	;RP1=0, select bank0
   876     075B  0740               	addwf	??_Lcdoutput,w
   877     075C  00C2               	movwf	??_Lcdoutput+2
   878     075D  0871               	movf	?___wmul+1,w
   879     075E  1803               	skipnc
   880     075F  0A71               	incf	?___wmul+1,w
   881     0760  0741               	addwf	??_Lcdoutput+1,w
   882     0761  00C3               	movwf	??_Lcdoutput+3
   883     0762  083E               	movf	Lcdoutput@i,w
   884     0763  0742               	addwf	??_Lcdoutput+2,w
   885     0764  00F8               	movwf	___lwdiv@dividend
   886     0765  083F               	movf	Lcdoutput@i+1,w
   887     0766  1803               	skipnc
   888     0767  0A3F               	incf	Lcdoutput@i+1,w
   889     0768  0743               	addwf	??_Lcdoutput+3,w
   890     0769  00F9               	movwf	___lwdiv@dividend+1
   891     076A  120A  118A  259C  120A  118A  	fcall	___lwdiv
   892     076F  0876               	movf	?___lwdiv,w
   893     0770  1283               	bcf	3,5	;RP0=0, select bank0
   894     0771  1303               	bcf	3,6	;RP1=0, select bank0
   895     0772  00C4               	movwf	??_Lcdoutput+4
   896     0773  01C5               	clrf	??_Lcdoutput+5
   897     0774  0844               	movf	??_Lcdoutput+4,w
   898     0775  00A4               	movwf	_d2
   899     0776  0845               	movf	??_Lcdoutput+5,w
   900     0777  00A5               	movwf	_d2+1
   901                           
   902                           ;class4_set.c: 135:     d1 = (unsigned char)(i - (d4 * 1000) - (d3 * 100) - (d2 * 10));
   903     0778  3018               	movlw	24
   904     0779  00F0               	movwf	___bmul@multiplicand
   905     077A  0820               	movf	_d4,w
   906     077B  120A  118A  2551  120A  118A  	fcall	___bmul
   907     0780  1283               	bcf	3,5	;RP0=0, select bank0
   908     0781  1303               	bcf	3,6	;RP1=0, select bank0
   909     0782  00C0               	movwf	??_Lcdoutput
   910     0783  309C               	movlw	156
   911     0784  00F0               	movwf	___bmul@multiplicand
   912     0785  0822               	movf	_d3,w
   913     0786  120A  118A  2551  120A  118A  	fcall	___bmul
   914     078B  1283               	bcf	3,5	;RP0=0, select bank0
   915     078C  1303               	bcf	3,6	;RP1=0, select bank0
   916     078D  00C1               	movwf	??_Lcdoutput+1
   917     078E  30F6               	movlw	246
   918     078F  00F0               	movwf	___bmul@multiplicand
   919     0790  0824               	movf	_d2,w
   920     0791  120A  118A  2551  120A  118A  	fcall	___bmul
   921     0796  1283               	bcf	3,5	;RP0=0, select bank0
   922     0797  1303               	bcf	3,6	;RP1=0, select bank0
   923     0798  0741               	addwf	??_Lcdoutput+1,w
   924     0799  0740               	addwf	??_Lcdoutput,w
   925     079A  073E               	addwf	Lcdoutput@i,w
   926     079B  00C2               	movwf	??_Lcdoutput+2
   927     079C  01C3               	clrf	??_Lcdoutput+3
   928     079D  0842               	movf	??_Lcdoutput+2,w
   929     079E  00A6               	movwf	_d1
   930     079F  0843               	movf	??_Lcdoutput+3,w
   931     07A0  00A7               	movwf	_d1+1
   932                           
   933                           ;class4_set.c: 137:     Lcd_Command(0X88);
   934     07A1  3088               	movlw	136
   935     07A2  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   936                           
   937                           ;class4_set.c: 138:     Lcd_Data(0X30 + d4);
   938     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   939     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   940     07A9  0820               	movf	_d4,w
   941     07AA  3E30               	addlw	48
   942     07AB  120A  118A  252C  120A  118A  	fcall	_Lcd_Data
   943                           
   944                           ;class4_set.c: 139:     Lcd_Command(0X89);
   945     07B0  3089               	movlw	137
   946     07B1  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   947                           
   948                           ;class4_set.c: 140:     Lcd_Data(0X30 + d3);
   949     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   950     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   951     07B8  0822               	movf	_d3,w
   952     07B9  3E30               	addlw	48
   953     07BA  120A  118A  252C  120A  118A  	fcall	_Lcd_Data
   954                           
   955                           ;class4_set.c: 141:     Lcd_Command(0X8A);
   956     07BF  308A               	movlw	138
   957     07C0  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   958                           
   959                           ;class4_set.c: 142:     Lcd_Data(0X30 + d2);
   960     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   961     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   962     07C7  0824               	movf	_d2,w
   963     07C8  3E30               	addlw	48
   964     07C9  120A  118A  252C  120A  118A  	fcall	_Lcd_Data
   965                           
   966                           ;class4_set.c: 143:     Lcd_Command(0X8B);
   967     07CE  308B               	movlw	139
   968     07CF  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
   969                           
   970                           ;class4_set.c: 144:     Lcd_Data(0X30 + d1);
   971     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   972     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   973     07D6  0826               	movf	_d1,w
   974     07D7  3E30               	addlw	48
   975     07D8  120A  118A  252C  120A  118A  	fcall	_Lcd_Data
   976     07DD                     l83:
   977     07DD  0008               	return
   978     07DE                     __end_of_Lcdoutput:
   979                           
   980                           	psect	text3
   981     0577                     __ptext3:	
   982 ;; *************** function ___wmul *****************
   983 ;; Defined at:
   984 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  multiplier      2    0[COMMON] unsigned int 
   987 ;;  multiplicand    2    2[COMMON] unsigned int 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  product         2    4[COMMON] unsigned int 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2    0[COMMON] unsigned int 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         4       0       0       0       0
  1000 ;;      Locals:         2       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0
  1002 ;;      Totals:         6       0       0       0       0
  1003 ;;Total ram usage:        6 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_Lcdoutput
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012     0577                     ___wmul:	
  1013                           ;psect for function ___wmul
  1014                           
  1015     0577                     l819:	
  1016                           ;incstack = 0
  1017                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1018                           
  1019     0577  01F4               	clrf	___wmul@product
  1020     0578  01F5               	clrf	___wmul@product+1
  1021     0579                     l821:
  1022     0579  1C70               	btfss	___wmul@multiplier,0
  1023     057A  2D7C               	goto	u181
  1024     057B  2D7D               	goto	u180
  1025     057C                     u181:
  1026     057C  2D83               	goto	l169
  1027     057D                     u180:
  1028     057D                     l823:
  1029     057D  0872               	movf	___wmul@multiplicand,w
  1030     057E  07F4               	addwf	___wmul@product,f
  1031     057F  1803               	skipnc
  1032     0580  0AF5               	incf	___wmul@product+1,f
  1033     0581  0873               	movf	___wmul@multiplicand+1,w
  1034     0582  07F5               	addwf	___wmul@product+1,f
  1035     0583                     l169:
  1036     0583  3001               	movlw	1
  1037     0584                     u195:
  1038     0584  1003               	clrc
  1039     0585  0DF2               	rlf	___wmul@multiplicand,f
  1040     0586  0DF3               	rlf	___wmul@multiplicand+1,f
  1041     0587  3EFF               	addlw	-1
  1042     0588  1D03               	skipz
  1043     0589  2D84               	goto	u195
  1044     058A                     l825:
  1045     058A  3001               	movlw	1
  1046     058B                     u205:
  1047     058B  1003               	clrc
  1048     058C  0CF1               	rrf	___wmul@multiplier+1,f
  1049     058D  0CF0               	rrf	___wmul@multiplier,f
  1050     058E  3EFF               	addlw	-1
  1051     058F  1D03               	skipz
  1052     0590  2D8B               	goto	u205
  1053     0591                     l827:
  1054     0591  0870               	movf	___wmul@multiplier,w
  1055     0592  0471               	iorwf	___wmul@multiplier+1,w
  1056     0593  1D03               	btfss	3,2
  1057     0594  2D96               	goto	u211
  1058     0595  2D97               	goto	u210
  1059     0596                     u211:
  1060     0596  2D79               	goto	l821
  1061     0597                     u210:
  1062     0597                     l829:
  1063     0597  0875               	movf	___wmul@product+1,w
  1064     0598  00F1               	movwf	?___wmul+1
  1065     0599  0874               	movf	___wmul@product,w
  1066     059A  00F0               	movwf	?___wmul
  1067     059B                     l171:
  1068     059B  0008               	return
  1069     059C                     __end_of___wmul:
  1070                           
  1071                           	psect	text4
  1072     059C                     __ptext4:	
  1073 ;; *************** function ___lwdiv *****************
  1074 ;; Defined at:
  1075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  divisor         2    6[COMMON] unsigned int 
  1078 ;;  dividend        2    8[COMMON] unsigned int 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  quotient        2   10[COMMON] unsigned int 
  1081 ;;  counter         1   12[COMMON] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  2    6[COMMON] unsigned int 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         4       0       0       0       0
  1092 ;;      Locals:         3       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0
  1094 ;;      Totals:         7       0       0       0       0
  1095 ;;Total ram usage:        7 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_Lcdoutput
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104     059C                     ___lwdiv:	
  1105                           ;psect for function ___lwdiv
  1106                           
  1107     059C                     l847:	
  1108                           ;incstack = 0
  1109                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1110                           
  1111     059C  01FA               	clrf	___lwdiv@quotient
  1112     059D  01FB               	clrf	___lwdiv@quotient+1
  1113     059E                     l849:
  1114     059E  0876               	movf	___lwdiv@divisor,w
  1115     059F  0477               	iorwf	___lwdiv@divisor+1,w
  1116     05A0  1903               	btfsc	3,2
  1117     05A1  2DA3               	goto	u241
  1118     05A2  2DA4               	goto	u240
  1119     05A3                     u241:
  1120     05A3  2DD9               	goto	l869
  1121     05A4                     u240:
  1122     05A4                     l851:
  1123     05A4  3001               	movlw	1
  1124     05A5  00FC               	movwf	___lwdiv@counter
  1125     05A6  2DB0               	goto	l857
  1126     05A7                     l853:
  1127     05A7  3001               	movlw	1
  1128     05A8                     u255:
  1129     05A8  1003               	clrc
  1130     05A9  0DF6               	rlf	___lwdiv@divisor,f
  1131     05AA  0DF7               	rlf	___lwdiv@divisor+1,f
  1132     05AB  3EFF               	addlw	-1
  1133     05AC  1D03               	skipz
  1134     05AD  2DA8               	goto	u255
  1135     05AE                     l855:
  1136     05AE  3001               	movlw	1
  1137     05AF  07FC               	addwf	___lwdiv@counter,f
  1138     05B0                     l857:
  1139     05B0  1FF7               	btfss	___lwdiv@divisor+1,7
  1140     05B1  2DB3               	goto	u261
  1141     05B2  2DB4               	goto	u260
  1142     05B3                     u261:
  1143     05B3  2DA7               	goto	l853
  1144     05B4                     u260:
  1145     05B4                     l859:
  1146     05B4  3001               	movlw	1
  1147     05B5                     u275:
  1148     05B5  1003               	clrc
  1149     05B6  0DFA               	rlf	___lwdiv@quotient,f
  1150     05B7  0DFB               	rlf	___lwdiv@quotient+1,f
  1151     05B8  3EFF               	addlw	-1
  1152     05B9  1D03               	skipz
  1153     05BA  2DB5               	goto	u275
  1154     05BB  0877               	movf	___lwdiv@divisor+1,w
  1155     05BC  0279               	subwf	___lwdiv@dividend+1,w
  1156     05BD  1D03               	skipz
  1157     05BE  2DC1               	goto	u285
  1158     05BF  0876               	movf	___lwdiv@divisor,w
  1159     05C0  0278               	subwf	___lwdiv@dividend,w
  1160     05C1                     u285:
  1161     05C1  1C03               	skipc
  1162     05C2  2DC4               	goto	u281
  1163     05C3  2DC5               	goto	u280
  1164     05C4                     u281:
  1165     05C4  2DCC               	goto	l865
  1166     05C5                     u280:
  1167     05C5                     l861:
  1168     05C5  0876               	movf	___lwdiv@divisor,w
  1169     05C6  02F8               	subwf	___lwdiv@dividend,f
  1170     05C7  0877               	movf	___lwdiv@divisor+1,w
  1171     05C8  1C03               	skipc
  1172     05C9  03F9               	decf	___lwdiv@dividend+1,f
  1173     05CA  02F9               	subwf	___lwdiv@dividend+1,f
  1174     05CB                     l863:
  1175     05CB  147A               	bsf	___lwdiv@quotient,0
  1176     05CC                     l865:
  1177     05CC  3001               	movlw	1
  1178     05CD                     u295:
  1179     05CD  1003               	clrc
  1180     05CE  0CF7               	rrf	___lwdiv@divisor+1,f
  1181     05CF  0CF6               	rrf	___lwdiv@divisor,f
  1182     05D0  3EFF               	addlw	-1
  1183     05D1  1D03               	skipz
  1184     05D2  2DCD               	goto	u295
  1185     05D3                     l867:
  1186     05D3  3001               	movlw	1
  1187     05D4  02FC               	subwf	___lwdiv@counter,f
  1188     05D5  1D03               	btfss	3,2
  1189     05D6  2DD8               	goto	u301
  1190     05D7  2DD9               	goto	u300
  1191     05D8                     u301:
  1192     05D8  2DB4               	goto	l859
  1193     05D9                     u300:
  1194     05D9                     l869:
  1195     05D9  087B               	movf	___lwdiv@quotient+1,w
  1196     05DA  00F7               	movwf	?___lwdiv+1
  1197     05DB  087A               	movf	___lwdiv@quotient,w
  1198     05DC  00F6               	movwf	?___lwdiv
  1199     05DD                     l449:
  1200     05DD  0008               	return
  1201     05DE                     __end_of___lwdiv:
  1202                           
  1203                           	psect	text5
  1204     0551                     __ptext5:	
  1205 ;; *************** function ___bmul *****************
  1206 ;; Defined at:
  1207 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  multiplier      1    wreg     unsigned char 
  1210 ;;  multiplicand    1    0[COMMON] unsigned char 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  multiplier      1    2[COMMON] unsigned char 
  1213 ;;  product         1    1[COMMON] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      unsigned char 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         1       0       0       0       0
  1224 ;;      Locals:         2       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         3       0       0       0       0
  1227 ;;Total ram usage:        3 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_Lcdoutput
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236     0551                     ___bmul:	
  1237                           ;psect for function ___bmul
  1238                           
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1242                           ;___bmul@multiplier stored from wreg
  1243     0551  00F2               	movwf	___bmul@multiplier
  1244     0552                     l833:
  1245     0552  01F1               	clrf	___bmul@product
  1246     0553                     l835:
  1247     0553  1C72               	btfss	___bmul@multiplier,0
  1248     0554  2D56               	goto	u221
  1249     0555  2D57               	goto	u220
  1250     0556                     u221:
  1251     0556  2D59               	goto	l839
  1252     0557                     u220:
  1253     0557                     l837:
  1254     0557  0870               	movf	___bmul@multiplicand,w
  1255     0558  07F1               	addwf	___bmul@product,f
  1256     0559                     l839:
  1257     0559  1003               	clrc
  1258     055A  0DF0               	rlf	___bmul@multiplicand,f
  1259     055B                     l841:
  1260     055B  1003               	clrc
  1261     055C  0CF2               	rrf	___bmul@multiplier,f
  1262     055D  0872               	movf	___bmul@multiplier,w
  1263     055E  1D03               	btfss	3,2
  1264     055F  2D61               	goto	u231
  1265     0560  2D62               	goto	u230
  1266     0561                     u231:
  1267     0561  2D53               	goto	l835
  1268     0562                     u230:
  1269     0562                     l843:
  1270     0562  0871               	movf	___bmul@product,w
  1271     0563                     l195:
  1272     0563  0008               	return
  1273     0564                     __end_of___bmul:
  1274                           
  1275                           	psect	text6
  1276     052C                     __ptext6:	
  1277 ;; *************** function _Lcd_Data *****************
  1278 ;; Defined at:
  1279 ;;		line 122 in file "class4_set.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  i               1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  i               1    2[COMMON] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0
  1295 ;;      Temps:          2       0       0       0       0
  1296 ;;      Totals:         3       0       0       0       0
  1297 ;;Total ram usage:        3 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_keyscane
  1303 ;;		_Lcdoutput
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307     052C                     _Lcd_Data:	
  1308                           ;psect for function _Lcd_Data
  1309                           
  1310                           
  1311                           ;incstack = 0
  1312                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0]
  1313                           ;Lcd_Data@i stored from wreg
  1314     052C  00F2               	movwf	Lcd_Data@i
  1315     052D                     l809:
  1316                           
  1317                           ;class4_set.c: 122: void Lcd_Data(unsigned char i);class4_set.c: 123: {;class4_set.c: 12
      +                          4:     PORTC |= 0X08;
  1318     052D  1283               	bcf	3,5	;RP0=0, select bank0
  1319     052E  1303               	bcf	3,6	;RP1=0, select bank0
  1320     052F  1587               	bsf	7,3	;volatile
  1321     0530                     l811:
  1322                           
  1323                           ;class4_set.c: 125:     PORTD = i;
  1324     0530  0872               	movf	Lcd_Data@i,w
  1325     0531  0088               	movwf	8	;volatile
  1326     0532                     l813:
  1327                           
  1328                           ;class4_set.c: 126:     PORTC |= 0X01;
  1329     0532  1407               	bsf	7,0	;volatile
  1330     0533                     l815:
  1331                           
  1332                           ;class4_set.c: 127:     PORTC &= ~0X01;
  1333     0533  30FE               	movlw	254
  1334     0534  0587               	andwf	7,f	;volatile
  1335     0535                     l817:
  1336                           
  1337                           ;class4_set.c: 128:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1338     0535  30C3               	movlw	195
  1339     0536  00F1               	movwf	??_Lcd_Data+1
  1340     0537  30CD               	movlw	205
  1341     0538  00F0               	movwf	??_Lcd_Data
  1342     0539                     u357:
  1343     0539  0BF0               	decfsz	??_Lcd_Data,f
  1344     053A  2D39               	goto	u357
  1345     053B  0BF1               	decfsz	??_Lcd_Data+1,f
  1346     053C  2D39               	goto	u357
  1347     053D                     l80:
  1348     053D  0008               	return
  1349     053E                     __end_of_Lcd_Data:
  1350                           
  1351                           	psect	text7
  1352     05DE                     __ptext7:	
  1353 ;; *************** function _init *****************
  1354 ;; Defined at:
  1355 ;;		line 36 in file "class4_set.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          2       0       0       0       0
  1372 ;;      Totals:         2       0       0       0       0
  1373 ;;Total ram usage:        2 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 1
  1376 ;; This function calls:
  1377 ;;		_Lcd_Command
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383     05DE                     _init:	
  1384                           ;psect for function _init
  1385                           
  1386     05DE                     l875:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1389                           
  1390                           
  1391                           ;class4_set.c: 38:     TRISC=0X00;
  1392     05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1393     05DF  1303               	bcf	3,6	;RP1=0, select bank1
  1394     05E0  0187               	clrf	7	;volatile
  1395                           
  1396                           ;class4_set.c: 39:     TRISD=0X00;
  1397     05E1  0188               	clrf	8	;volatile
  1398     05E2                     l877:
  1399                           
  1400                           ;class4_set.c: 40:     TRISB=0XF0;
  1401     05E2  30F0               	movlw	240
  1402     05E3  0086               	movwf	6	;volatile
  1403     05E4                     l879:
  1404                           
  1405                           ;class4_set.c: 42:     OPTION_REG=0X7F;
  1406     05E4  307F               	movlw	127
  1407     05E5  0081               	movwf	1	;volatile
  1408     05E6                     l881:
  1409                           
  1410                           ;class4_set.c: 46:     Lcd_Command(0x30);
  1411     05E6  3030               	movlw	48
  1412     05E7  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
  1413     05EC                     l883:
  1414                           
  1415                           ;class4_set.c: 47:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1416     05EC  30C3               	movlw	195
  1417     05ED  00F4               	movwf	??_init+1
  1418     05EE  30CD               	movlw	205
  1419     05EF  00F3               	movwf	??_init
  1420     05F0                     u367:
  1421     05F0  0BF3               	decfsz	??_init,f
  1422     05F1  2DF0               	goto	u367
  1423     05F2  0BF4               	decfsz	??_init+1,f
  1424     05F3  2DF0               	goto	u367
  1425     05F4                     l885:
  1426                           
  1427                           ;class4_set.c: 49:     Lcd_Command(0x30);
  1428     05F4  3030               	movlw	48
  1429     05F5  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
  1430     05FA                     l887:
  1431                           
  1432                           ;class4_set.c: 50:      _delay((unsigned long)((100)*(6000000/4000.0)));
  1433     05FA  30C3               	movlw	195
  1434     05FB  00F4               	movwf	??_init+1
  1435     05FC  30CD               	movlw	205
  1436     05FD  00F3               	movwf	??_init
  1437     05FE                     u377:
  1438     05FE  0BF3               	decfsz	??_init,f
  1439     05FF  2DFE               	goto	u377
  1440     0600  0BF4               	decfsz	??_init+1,f
  1441     0601  2DFE               	goto	u377
  1442     0602                     l889:
  1443                           
  1444                           ;class4_set.c: 52:     Lcd_Command(0x30);
  1445     0602  3030               	movlw	48
  1446     0603  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
  1447     0608                     l891:
  1448                           
  1449                           ;class4_set.c: 53:      _delay((unsigned long)((100)*(6000000/4000.0)));
  1450     0608  30C3               	movlw	195
  1451     0609  00F4               	movwf	??_init+1
  1452     060A  30CD               	movlw	205
  1453     060B  00F3               	movwf	??_init
  1454     060C                     u387:
  1455     060C  0BF3               	decfsz	??_init,f
  1456     060D  2E0C               	goto	u387
  1457     060E  0BF4               	decfsz	??_init+1,f
  1458     060F  2E0C               	goto	u387
  1459     0610                     l893:
  1460                           
  1461                           ;class4_set.c: 55:     Lcd_Command(0x38);
  1462     0610  3038               	movlw	56
  1463     0611  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
  1464     0616                     l895:
  1465                           
  1466                           ;class4_set.c: 56:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1467     0616  30C3               	movlw	195
  1468     0617  00F4               	movwf	??_init+1
  1469     0618  30CD               	movlw	205
  1470     0619  00F3               	movwf	??_init
  1471     061A                     u397:
  1472     061A  0BF3               	decfsz	??_init,f
  1473     061B  2E1A               	goto	u397
  1474     061C  0BF4               	decfsz	??_init+1,f
  1475     061D  2E1A               	goto	u397
  1476     061E                     l897:
  1477                           
  1478                           ;class4_set.c: 58:     Lcd_Command(0x06);
  1479     061E  3006               	movlw	6
  1480     061F  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
  1481     0624                     l899:
  1482                           
  1483                           ;class4_set.c: 59:      _delay((unsigned long)((100)*(6000000/4000.0)));
  1484     0624  30C3               	movlw	195
  1485     0625  00F4               	movwf	??_init+1
  1486     0626  30CD               	movlw	205
  1487     0627  00F3               	movwf	??_init
  1488     0628                     u407:
  1489     0628  0BF3               	decfsz	??_init,f
  1490     0629  2E28               	goto	u407
  1491     062A  0BF4               	decfsz	??_init+1,f
  1492     062B  2E28               	goto	u407
  1493     062C                     l901:
  1494                           
  1495                           ;class4_set.c: 61:     Lcd_Command(0x0C);
  1496     062C  300C               	movlw	12
  1497     062D  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
  1498     0632                     l903:
  1499                           
  1500                           ;class4_set.c: 62:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1501     0632  30C3               	movlw	195
  1502     0633  00F4               	movwf	??_init+1
  1503     0634  30CD               	movlw	205
  1504     0635  00F3               	movwf	??_init
  1505     0636                     u417:
  1506     0636  0BF3               	decfsz	??_init,f
  1507     0637  2E36               	goto	u417
  1508     0638  0BF4               	decfsz	??_init+1,f
  1509     0639  2E36               	goto	u417
  1510     063A                     l905:
  1511                           
  1512                           ;class4_set.c: 64:     Lcd_Command(0x01);
  1513     063A  3001               	movlw	1
  1514     063B  120A  118A  253E  120A  118A  	fcall	_Lcd_Command
  1515     0640                     l907:
  1516                           
  1517                           ;class4_set.c: 65:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1518     0640  30C3               	movlw	195
  1519     0641  00F4               	movwf	??_init+1
  1520     0642  30CD               	movlw	205
  1521     0643  00F3               	movwf	??_init
  1522     0644                     u427:
  1523     0644  0BF3               	decfsz	??_init,f
  1524     0645  2E44               	goto	u427
  1525     0646  0BF4               	decfsz	??_init+1,f
  1526     0647  2E44               	goto	u427
  1527     0648                     l59:
  1528     0648  0008               	return
  1529     0649                     __end_of_init:
  1530                           
  1531                           	psect	text8
  1532     053E                     __ptext8:	
  1533 ;; *************** function _Lcd_Command *****************
  1534 ;; Defined at:
  1535 ;;		line 114 in file "class4_set.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  i               1    wreg     unsigned char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  i               1    2[COMMON] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         1       0       0       0       0
  1551 ;;      Temps:          2       0       0       0       0
  1552 ;;      Totals:         3       0       0       0       0
  1553 ;;Total ram usage:        3 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_init
  1559 ;;		_keyscane
  1560 ;;		_Lcdoutput
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564     053E                     _Lcd_Command:	
  1565                           ;psect for function _Lcd_Command
  1566                           
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
  1570                           ;Lcd_Command@i stored from wreg
  1571     053E  00F2               	movwf	Lcd_Command@i
  1572     053F                     l801:
  1573                           
  1574                           ;class4_set.c: 114: void Lcd_Command(unsigned char i);class4_set.c: 115: {;class4_set.c:
      +                           116:     PORTC &= ~0x08;
  1575     053F  30F7               	movlw	247
  1576     0540  1283               	bcf	3,5	;RP0=0, select bank0
  1577     0541  1303               	bcf	3,6	;RP1=0, select bank0
  1578     0542  0587               	andwf	7,f	;volatile
  1579     0543                     l803:
  1580                           
  1581                           ;class4_set.c: 117:     PORTD = i;
  1582     0543  0872               	movf	Lcd_Command@i,w
  1583     0544  0088               	movwf	8	;volatile
  1584     0545                     l805:
  1585                           
  1586                           ;class4_set.c: 118:     PORTC |= 0x01;
  1587     0545  1407               	bsf	7,0	;volatile
  1588     0546                     l807:
  1589                           
  1590                           ;class4_set.c: 119:     PORTC &= ~0x01;
  1591     0546  30FE               	movlw	254
  1592     0547  0587               	andwf	7,f	;volatile
  1593                           
  1594                           ;class4_set.c: 120:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1595     0548  30C3               	movlw	195
  1596     0549  00F1               	movwf	??_Lcd_Command+1
  1597     054A  30CD               	movlw	205
  1598     054B  00F0               	movwf	??_Lcd_Command
  1599     054C                     u437:
  1600     054C  0BF0               	decfsz	??_Lcd_Command,f
  1601     054D  2D4C               	goto	u437
  1602     054E  0BF1               	decfsz	??_Lcd_Command+1,f
  1603     054F  2D4C               	goto	u437
  1604     0550                     l77:
  1605     0550  0008               	return
  1606     0551                     __end_of_Lcd_Command:
  1607     0002                     ___latbits      equ	2
  1608     007E                     btemp           set	126	;btemp
  1609     007E                     wtemp0          set	126
  1610                           
  1611                           	psect	config
  1612                           
  1613                           ;Config register CONFIG @ 0x2007
  1614                           ;	Oscillator Selection bits
  1615                           ;	FOSC = EXTRC, RC oscillator
  1616                           ;	Watchdog Timer Enable bit
  1617                           ;	WDTE = OFF, WDT disabled
  1618                           ;	Power-up Timer Enable bit
  1619                           ;	PWRTE = OFF, PWRT disabled
  1620                           ;	Brown-out Reset Enable bit
  1621                           ;	BOREN = OFF, BOR disabled
  1622                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1623                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1624                           ;	Data EEPROM Memory Code Protection bit
  1625                           ;	CPD = OFF, Data EEPROM code protection off
  1626                           ;	Flash Program Memory Write Enable bits
  1627                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1628                           ;	In-Circuit Debugger Mode bit
  1629                           ;	DEBUG = 0x1, unprogrammed default
  1630                           ;	Flash Program Memory Code Protection bit
  1631                           ;	CP = OFF, Code protection off
  1632     2007                     	org	8199
  1633     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Lcdoutput->___lwdiv
    ___lwdiv->___wmul
    _init->_Lcd_Command

Critical Paths under _main in BANK0

    _keyscane->_Lcdoutput

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     613
                               _init
                           _keyscane
 ---------------------------------------------------------------------------------
 (1) _keyscane                                             0     0      0     584
                        _Lcd_Command
                           _Lcd_Data
                          _Lcdoutput
 ---------------------------------------------------------------------------------
 (2) _Lcdoutput                                            8     6      2     526
                                              0 BANK0      8     6      2
                        _Lcd_Command
                           _Lcd_Data
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4      98
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     168
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     110
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      29
                                              3 COMMON     2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _Lcd_Command
   _keyscane
     _Lcd_Command
     _Lcd_Data
     _Lcdoutput
       _Lcd_Command
       _Lcd_Data
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      8      38     47.5%
BITBANK0            80      0       0      0.0%
COMMON              14     13      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      52      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 26 12:10:19 2025

                      _i 002A                        _j 0028                        _m 002E  
                      _n 002D                        _x 007D                        pc 0002  
         ___bmul@product 0071                       l80 053D                       l74 06F2  
                     l59 0648                       l83 07DD                       l77 0550  
                     _d1 0026                       _d2 0024                       _d3 0022  
                     _d4 0020                       fsr 0004      ___wmul@multiplicand 0072  
                    l171 059B                      l169 0583                      l195 0563  
                    l801 053F                      l449 05DD                      l803 0543  
                    l811 0530                      l805 0545                      l901 062C  
                    l813 0532                      l821 0579                      l807 0546  
                    l903 0632                      l815 0533                      l823 057D  
                    l911 064D                      l905 063A                      l817 0535  
                    l809 052D                      l841 055B                      l833 0552  
                    l825 058A                      l921 0657                      l913 0650  
                    l907 0640                      l843 0562                      l835 0553  
                    l851 05A4                      l827 0591                      l819 0577  
                    l923 0661                      l915 0656                      l837 0557  
                    l861 05C5                      l853 05A7                      l829 0597  
                    l941 0683                      l925 0663                      l909 0649  
                    l839 0559                      l863 05CB                      l855 05AE  
                    l847 059C                      l951 06BA                      l943 0695  
                    l935 0671                      l927 0669                      l881 05E6  
                    l865 05CC                      l857 05B0                      l849 059E  
                    l873 06F3                      l961 06D1                      l953 06C0  
                    l945 06A4                      l937 067B                      l929 066F  
                    l891 0608                      l883 05EC                      l875 05DE  
                    l867 05D3                      l859 05B4                      l963 06D3  
                    l955 06C6                      l947 06A8                      l939 067D  
                    l971 050F                      l893 0610                      l885 05F4  
                    l877 05E2                      l869 05D9                      l965 06D9  
                    l957 06CA                      l949 06AE                      l973 0514  
                    l895 0616                      l887 05FA                      l879 05E4  
                    l897 061E                      l889 0602                      l969 06E4  
                    l899 0624                      u210 0597                      u211 0596  
                    u220 0557                      u300 05D9                      u221 0556  
                    u301 05D8                      u205 058B                      u230 0562  
                    u310 0669                      u231 0561                      u311 0668  
                    u240 05A4                      u320 0683                      u241 05A3  
                    u321 0682                      u330 06A4                      u331 06A3  
                    u260 05B4                      u180 057D                      u340 06C6  
                    u261 05B3                      u181 057C                      u341 06C5  
                    u407 0628                      u255 05A8                      u280 05C5  
                    u417 0636                      u281 05C4                      u427 0644  
                    u275 05B5                      u195 0584                      u437 054C  
                    u357 0539                      u285 05C1                      u367 05F0  
                    u295 05CD                      u377 05FE                      u387 060C  
                    u397 061A               Lcdoutput@i 003E                      fsr0 0004  
                    indf 0000      __end_of_Lcd_Command 0551                     _main 050F  
                   _init 05DE                     btemp 007E                     start 0000  
      ___bmul@multiplier 0072                    ?_main 0070                    ?_init 0070  
        __end_of___lwdiv 05DE                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _array 002F                    _value 002C  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_Lcd_Data 053E          __initialization 07DE             __end_of_main 051D  
           __end_of_init 0649              _Lcd_Command 053E                   ??_main 007D  
                 ??_init 0073                   ___bmul 0551                   ___wmul 0577  
              ??___lwdiv 007A         __end_of_keyscane 06F3  __end_of__initialization 07FC  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070             __pidataBANK0 051D  
      __end_of_Lcdoutput 07DE                ?_Lcd_Data 0070               __pbssBANK0 0020  
             __pmaintext 050F                  ?___bmul 0070                  ?___wmul 0070  
             ??_Lcd_Data 0070                ?_keyscane 0070                  ___lwdiv 059C  
           ?_Lcd_Command 0070                  __ptext1 0649                  __ptext2 06F3  
                __ptext3 0577                  __ptext4 059C                  __ptext5 0551  
                __ptext6 052C                  __ptext7 05DE                  __ptext8 053E  
   end_of_initialization 07FC               ??_keyscane 007D                Lcd_Data@i 0072  
         __end_of___bmul 0564           __end_of___wmul 059C                _Lcdoutput 06F3  
    start_initialization 07DE                 ??___bmul 0071                 ??___wmul 0074  
             init_fetch0 0564              __pdataBANK0 002F               ?_Lcdoutput 003E  
            __pbssCOMMON 007D                ___latbits 0002            __pcstackBANK0 003E  
       ___lwdiv@dividend 0078                 ?___lwdiv 0076         ___lwdiv@quotient 007A  
         ___wmul@product 0074             Lcd_Command@i 0072        ___wmul@multiplier 0070  
            ??_Lcdoutput 0040                 _Lcd_Data 052C          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007C                 _keyscane 0649                 init_ram0 0568  
          ??_Lcd_Command 0070               _OPTION_REG 0081  
