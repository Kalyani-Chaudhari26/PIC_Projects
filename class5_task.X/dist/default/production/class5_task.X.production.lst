

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 09 12:40:18 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175                           
   176                           	psect	nvCOMMON
   177     0070                     __pnvCOMMON:
   178     0070                     _duty90_low:
   179     0070                     	ds	1
   180     0071                     _duty90_high:
   181     0071                     	ds	1
   182     0072                     _duty60_low:
   183     0072                     	ds	1
   184     0073                     _duty60_high:
   185     0073                     	ds	1
   186     0074                     _duty20_low:
   187     0074                     	ds	1
   188     0075                     _duty20_high:
   189     0075                     	ds	1
   190     0015                     _CCPR1L         set	21
   191     0012                     _T2CON          set	18
   192     0017                     _CCP1CON        set	23
   193     0092                     _PR2            set	146
   194     0087                     _TRISC          set	135
   195                           
   196                           	psect	cinit
   197     07FC                     start_initialization:	
   198                           ; #config settings
   199                           
   200     07FC                     __initialization:
   201     07FC                     end_of_initialization:	
   202                           ;End of C runtime variable initialization code
   203                           
   204     07FC                     __end_of__initialization:
   205     07FC  0183               	clrf	3
   206     07FD  120A  118A  2F7B   	ljmp	_main	;jump to C main() function
   207                           
   208                           	psect	cstackCOMMON
   209     0076                     __pcstackCOMMON:
   210     0076                     ?_initialize_pwm:
   211     0076                     ?_update_pwm_dutycycle:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0076                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0076                     ??_initialize_pwm:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0076                     ??_update_pwm_dutycycle:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225     0076                     	ds	3
   226     0079                     ??_main:
   227                           
   228                           	psect	maintext
   229     077B                     __pmaintext:	
   230                           ; 1 bytes @ 0x3
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 23 in file "newmain.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0
   253 ;;      Totals:         0       0       0       0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels required when called: 1
   256 ;; This function calls:
   257 ;;		_initialize_pwm
   258 ;;		_update_pwm_dutycycle
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264     077B                     _main:	
   265                           ;psect for function _main
   266                           
   267     077B                     l602:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   270                           
   271                           
   272                           ;newmain.c: 25:     initialize_pwm();
   273     077B  120A  118A  2789  120A  118A  	fcall	_initialize_pwm
   274     0780                     l604:
   275                           
   276                           ;newmain.c: 28:     {;newmain.c: 29:         update_pwm_dutycycle();
   277     0780  120A  118A  27A4  120A  118A  	fcall	_update_pwm_dutycycle
   278     0785  2F80               	goto	l604
   279     0786  120A  118A  2800   	ljmp	start
   280     0789                     __end_of_main:
   281                           
   282                           	psect	text1
   283     07A4                     __ptext1:	
   284 ;; *************** function _update_pwm_dutycycle *****************
   285 ;; Defined at:
   286 ;;		line 53 in file "newmain.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0
   302 ;;      Temps:          3       0       0       0       0
   303 ;;      Totals:         3       0       0       0       0
   304 ;;Total ram usage:        3 bytes
   305 ;; Hardware stack levels used: 1
   306 ;; This function calls:
   307 ;;		Nothing
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313     07A4                     _update_pwm_dutycycle:	
   314                           ;psect for function _update_pwm_dutycycle
   315                           
   316     07A4                     l588:	
   317                           ;incstack = 0
   318                           ; Regs used in _update_pwm_dutycycle: [wreg+status,2+status,0]
   319                           
   320                           
   321                           ;newmain.c: 56:     CCPR1L = duty20_high;
   322     07A4  0875               	movf	_duty20_high,w
   323     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   324     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   325     07A7  0095               	movwf	21	;volatile
   326     07A8                     l590:
   327                           
   328                           ;newmain.c: 57:     CCP1CON = (CCP1CON & 0xCF) | (duty20_low << 4);
   329     07A8  0874               	movf	_duty20_low,w
   330     07A9  00F6               	movwf	??_update_pwm_dutycycle
   331     07AA  3004               	movlw	4
   332     07AB                     u15:
   333     07AB  1003               	clrc
   334     07AC  0DF6               	rlf	??_update_pwm_dutycycle,f
   335     07AD  3EFF               	addlw	-1
   336     07AE  1D03               	skipz
   337     07AF  2FAB               	goto	u15
   338     07B0  0817               	movf	23,w	;volatile
   339     07B1  39CF               	andlw	207
   340     07B2  0476               	iorwf	??_update_pwm_dutycycle,w
   341     07B3  0097               	movwf	23	;volatile
   342     07B4                     l592:
   343                           
   344                           ;newmain.c: 58:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   345     07B4  3017               	movlw	23
   346     07B5  00F8               	movwf	??_update_pwm_dutycycle+2
   347     07B6  30D5               	movlw	213
   348     07B7  00F7               	movwf	??_update_pwm_dutycycle+1
   349     07B8  3016               	movlw	22
   350     07B9  00F6               	movwf	??_update_pwm_dutycycle
   351     07BA                     u47:
   352     07BA  0BF6               	decfsz	??_update_pwm_dutycycle,f
   353     07BB  2FBA               	goto	u47
   354     07BC  0BF7               	decfsz	??_update_pwm_dutycycle+1,f
   355     07BD  2FBA               	goto	u47
   356     07BE  0BF8               	decfsz	??_update_pwm_dutycycle+2,f
   357     07BF  2FBA               	goto	u47
   358     07C0  0000               	nop
   359     07C1                     l594:
   360                           
   361                           ;newmain.c: 61:     CCPR1L = duty60_high;
   362     07C1  0873               	movf	_duty60_high,w
   363     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   364     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   365     07C4  0095               	movwf	21	;volatile
   366     07C5                     l596:
   367                           
   368                           ;newmain.c: 62:     CCP1CON = (CCP1CON & 0xCF) | (duty60_low << 4);
   369     07C5  0872               	movf	_duty60_low,w
   370     07C6  00F6               	movwf	??_update_pwm_dutycycle
   371     07C7  3004               	movlw	4
   372     07C8                     u25:
   373     07C8  1003               	clrc
   374     07C9  0DF6               	rlf	??_update_pwm_dutycycle,f
   375     07CA  3EFF               	addlw	-1
   376     07CB  1D03               	skipz
   377     07CC  2FC8               	goto	u25
   378     07CD  0817               	movf	23,w	;volatile
   379     07CE  39CF               	andlw	207
   380     07CF  0476               	iorwf	??_update_pwm_dutycycle,w
   381     07D0  0097               	movwf	23	;volatile
   382                           
   383                           ;newmain.c: 63:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   384     07D1  3017               	movlw	23
   385     07D2  00F8               	movwf	??_update_pwm_dutycycle+2
   386     07D3  30D5               	movlw	213
   387     07D4  00F7               	movwf	??_update_pwm_dutycycle+1
   388     07D5  3016               	movlw	22
   389     07D6  00F6               	movwf	??_update_pwm_dutycycle
   390     07D7                     u57:
   391     07D7  0BF6               	decfsz	??_update_pwm_dutycycle,f
   392     07D8  2FD7               	goto	u57
   393     07D9  0BF7               	decfsz	??_update_pwm_dutycycle+1,f
   394     07DA  2FD7               	goto	u57
   395     07DB  0BF8               	decfsz	??_update_pwm_dutycycle+2,f
   396     07DC  2FD7               	goto	u57
   397     07DD  0000               	nop
   398                           
   399                           ;newmain.c: 66:     CCPR1L = duty90_high;
   400     07DE  0871               	movf	_duty90_high,w
   401     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   402     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   403     07E1  0095               	movwf	21	;volatile
   404     07E2                     l598:
   405                           
   406                           ;newmain.c: 67:     CCP1CON = (CCP1CON & 0xCF) | (duty90_low << 4);
   407     07E2  0870               	movf	_duty90_low,w
   408     07E3  00F6               	movwf	??_update_pwm_dutycycle
   409     07E4  3004               	movlw	4
   410     07E5                     u35:
   411     07E5  1003               	clrc
   412     07E6  0DF6               	rlf	??_update_pwm_dutycycle,f
   413     07E7  3EFF               	addlw	-1
   414     07E8  1D03               	skipz
   415     07E9  2FE5               	goto	u35
   416     07EA  0817               	movf	23,w	;volatile
   417     07EB  39CF               	andlw	207
   418     07EC  0476               	iorwf	??_update_pwm_dutycycle,w
   419     07ED  0097               	movwf	23	;volatile
   420     07EE                     l600:
   421                           
   422                           ;newmain.c: 68:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   423     07EE  3017               	movlw	23
   424     07EF  00F8               	movwf	??_update_pwm_dutycycle+2
   425     07F0  30D5               	movlw	213
   426     07F1  00F7               	movwf	??_update_pwm_dutycycle+1
   427     07F2  3016               	movlw	22
   428     07F3  00F6               	movwf	??_update_pwm_dutycycle
   429     07F4                     u67:
   430     07F4  0BF6               	decfsz	??_update_pwm_dutycycle,f
   431     07F5  2FF4               	goto	u67
   432     07F6  0BF7               	decfsz	??_update_pwm_dutycycle+1,f
   433     07F7  2FF4               	goto	u67
   434     07F8  0BF8               	decfsz	??_update_pwm_dutycycle+2,f
   435     07F9  2FF4               	goto	u67
   436     07FA  0000               	nop
   437     07FB                     l42:
   438     07FB  0008               	return
   439     07FC                     __end_of_update_pwm_dutycycle:
   440                           
   441                           	psect	text2
   442     0789                     __ptext2:	
   443 ;; *************** function _initialize_pwm *****************
   444 ;; Defined at:
   445 ;;		line 34 in file "newmain.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		None
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472     0789                     _initialize_pwm:	
   473                           ;psect for function _initialize_pwm
   474                           
   475     0789                     l586:	
   476                           ;incstack = 0
   477                           ; Regs used in _initialize_pwm: []
   478                           
   479                           
   480                           ;newmain.c: 36:     TRISC = 0xFB;
   481     0789  30FB               	movlw	251
   482     078A  1683               	bsf	3,5	;RP0=1, select bank1
   483     078B  1303               	bcf	3,6	;RP1=0, select bank1
   484     078C  0087               	movwf	7	;volatile
   485                           
   486                           ;newmain.c: 37:     CCP1CON = 0x0C;
   487     078D  300C               	movlw	12
   488     078E  1283               	bcf	3,5	;RP0=0, select bank0
   489     078F  1303               	bcf	3,6	;RP1=0, select bank0
   490     0790  0097               	movwf	23	;volatile
   491                           
   492                           ;newmain.c: 38:     T2CON = 0x06;
   493     0791  3006               	movlw	6
   494     0792  0092               	movwf	18	;volatile
   495                           
   496                           ;newmain.c: 39:     PR2 = 0x2E;
   497     0793  302E               	movlw	46
   498     0794  1683               	bsf	3,5	;RP0=1, select bank1
   499     0795  1303               	bcf	3,6	;RP1=0, select bank1
   500     0796  0092               	movwf	18	;volatile
   501                           
   502                           ;newmain.c: 42:     duty20_high = 0x09;
   503     0797  3009               	movlw	9
   504     0798  00F5               	movwf	_duty20_high
   505                           
   506                           ;newmain.c: 43:     duty20_low = 0x02;
   507     0799  3002               	movlw	2
   508     079A  00F4               	movwf	_duty20_low
   509                           
   510                           ;newmain.c: 45:     duty60_high = 0x1C;
   511     079B  301C               	movlw	28
   512     079C  00F3               	movwf	_duty60_high
   513                           
   514                           ;newmain.c: 46:     duty60_low = 0x01;
   515     079D  3001               	movlw	1
   516     079E  00F2               	movwf	_duty60_low
   517                           
   518                           ;newmain.c: 48:     duty90_high = 0x2A;
   519     079F  302A               	movlw	42
   520     07A0  00F1               	movwf	_duty90_high
   521                           
   522                           ;newmain.c: 49:     duty90_low = 0x01;
   523     07A1  3001               	movlw	1
   524     07A2  00F0               	movwf	_duty90_low
   525     07A3                     l39:
   526     07A3  0008               	return
   527     07A4                     __end_of_initialize_pwm:
   528     0002                     ___latbits      equ	2
   529     007E                     btemp           set	126	;btemp
   530     007E                     wtemp0          set	126
   531                           
   532                           	psect	config
   533                           
   534                           ;Config register CONFIG @ 0x2007
   535                           ;	Oscillator Selection bits
   536                           ;	FOSC = EXTRC, RC oscillator
   537                           ;	Watchdog Timer Enable bit
   538                           ;	WDTE = OFF, WDT disabled
   539                           ;	Power-up Timer Enable bit
   540                           ;	PWRTE = OFF, PWRT disabled
   541                           ;	Brown-out Reset Enable bit
   542                           ;	BOREN = OFF, BOR disabled
   543                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   544                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   545                           ;	Data EEPROM Memory Code Protection bit
   546                           ;	CPD = OFF, Data EEPROM code protection off
   547                           ;	Flash Program Memory Write Enable bits
   548                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   549                           ;	In-Circuit Debugger Mode bit
   550                           ;	DEBUG = 0x1, unprogrammed default
   551                           ;	Flash Program Memory Code Protection bit
   552                           ;	CP = OFF, Code protection off
   553     2007                     	org	8199
   554     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_update_pwm_dutycycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _initialize_pwm
               _update_pwm_dutycycle
 ---------------------------------------------------------------------------------
 (1) _update_pwm_dutycycle                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialize_pwm                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_pwm
   _update_pwm_dutycycle

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      3       9     64.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       9      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 09 12:40:18 2025

                          l42 07FB                            l39 07A3                            u15 07AB  
                          u25 07C8                            u35 07E5                            u47 07BA  
                          u57 07D7                            u67 07F4                           l600 07EE  
                         l602 077B                           l604 0780                           l590 07A8  
                         l592 07B4                           l586 0789                           l594 07C1  
                         l596 07C5                           l588 07A4                           l598 07E2  
                         _PR2 0092              ??_initialize_pwm 0076                          _main 077B  
                        btemp 007E                          start 0000          _update_pwm_dutycycle 07A4  
                       ?_main 0076                         _T2CON 0012                         _TRISC 0087  
                       status 0003                         wtemp0 007E               __initialization 07FC  
                __end_of_main 0789         ?_update_pwm_dutycycle 0076                        ??_main 0079  
                      _CCPR1L 0015       __end_of__initialization 07FC                __pcstackCOMMON 0076  
      ??_update_pwm_dutycycle 0076                    __pnvCOMMON 0070                    __pmaintext 077B  
                     _CCP1CON 0017                    _duty20_low 0074                    _duty60_low 0072  
                  _duty90_low 0070                       __ptext1 07A4                       __ptext2 0789  
        end_of_initialization 07FC           start_initialization 07FC                     ___latbits 0002  
              _initialize_pwm 0789        __end_of_initialize_pwm 07A4                   _duty20_high 0075  
                 _duty60_high 0073                   _duty90_high 0071               ?_initialize_pwm 0076  
__end_of_update_pwm_dutycycle 07FC  
