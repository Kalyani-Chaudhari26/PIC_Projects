

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 19 15:39:18 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,space=0,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     PORTA           equ	5	;# 
    66     0006                     PORTB           equ	6	;# 
    67     0007                     PORTC           equ	7	;# 
    68     0008                     PORTD           equ	8	;# 
    69     0009                     PORTE           equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PIR1            equ	12	;# 
    73     000D                     PIR2            equ	13	;# 
    74     000E                     TMR1            equ	14	;# 
    75     000E                     TMR1L           equ	14	;# 
    76     000F                     TMR1H           equ	15	;# 
    77     0010                     T1CON           equ	16	;# 
    78     0011                     TMR2            equ	17	;# 
    79     0012                     T2CON           equ	18	;# 
    80     0013                     SSPBUF          equ	19	;# 
    81     0014                     SSPCON          equ	20	;# 
    82     0015                     CCPR1           equ	21	;# 
    83     0015                     CCPR1L          equ	21	;# 
    84     0016                     CCPR1H          equ	22	;# 
    85     0017                     CCP1CON         equ	23	;# 
    86     0018                     RCSTA           equ	24	;# 
    87     0019                     TXREG           equ	25	;# 
    88     001A                     RCREG           equ	26	;# 
    89     001B                     CCPR2           equ	27	;# 
    90     001B                     CCPR2L          equ	27	;# 
    91     001C                     CCPR2H          equ	28	;# 
    92     001D                     CCP2CON         equ	29	;# 
    93     001E                     ADRESH          equ	30	;# 
    94     001F                     ADCON0          equ	31	;# 
    95     0081                     OPTION_REG      equ	129	;# 
    96     0085                     TRISA           equ	133	;# 
    97     0086                     TRISB           equ	134	;# 
    98     0087                     TRISC           equ	135	;# 
    99     0088                     TRISD           equ	136	;# 
   100     0089                     TRISE           equ	137	;# 
   101     008C                     PIE1            equ	140	;# 
   102     008D                     PIE2            equ	141	;# 
   103     008E                     PCON            equ	142	;# 
   104     0091                     SSPCON2         equ	145	;# 
   105     0092                     PR2             equ	146	;# 
   106     0093                     SSPADD          equ	147	;# 
   107     0094                     SSPSTAT         equ	148	;# 
   108     0098                     TXSTA           equ	152	;# 
   109     0099                     SPBRG           equ	153	;# 
   110     009C                     CMCON           equ	156	;# 
   111     009D                     CVRCON          equ	157	;# 
   112     009E                     ADRESL          equ	158	;# 
   113     009F                     ADCON1          equ	159	;# 
   114     010C                     EEDATA          equ	268	;# 
   115     010D                     EEADR           equ	269	;# 
   116     010E                     EEDATH          equ	270	;# 
   117     010F                     EEADRH          equ	271	;# 
   118     018C                     EECON1          equ	396	;# 
   119     018D                     EECON2          equ	397	;# 
   120     0000                     INDF            equ	0	;# 
   121     0001                     TMR0            equ	1	;# 
   122     0002                     PCL             equ	2	;# 
   123     0003                     STATUS          equ	3	;# 
   124     0004                     FSR             equ	4	;# 
   125     0005                     PORTA           equ	5	;# 
   126     0006                     PORTB           equ	6	;# 
   127     0007                     PORTC           equ	7	;# 
   128     0008                     PORTD           equ	8	;# 
   129     0009                     PORTE           equ	9	;# 
   130     000A                     PCLATH          equ	10	;# 
   131     000B                     INTCON          equ	11	;# 
   132     000C                     PIR1            equ	12	;# 
   133     000D                     PIR2            equ	13	;# 
   134     000E                     TMR1            equ	14	;# 
   135     000E                     TMR1L           equ	14	;# 
   136     000F                     TMR1H           equ	15	;# 
   137     0010                     T1CON           equ	16	;# 
   138     0011                     TMR2            equ	17	;# 
   139     0012                     T2CON           equ	18	;# 
   140     0013                     SSPBUF          equ	19	;# 
   141     0014                     SSPCON          equ	20	;# 
   142     0015                     CCPR1           equ	21	;# 
   143     0015                     CCPR1L          equ	21	;# 
   144     0016                     CCPR1H          equ	22	;# 
   145     0017                     CCP1CON         equ	23	;# 
   146     0018                     RCSTA           equ	24	;# 
   147     0019                     TXREG           equ	25	;# 
   148     001A                     RCREG           equ	26	;# 
   149     001B                     CCPR2           equ	27	;# 
   150     001B                     CCPR2L          equ	27	;# 
   151     001C                     CCPR2H          equ	28	;# 
   152     001D                     CCP2CON         equ	29	;# 
   153     001E                     ADRESH          equ	30	;# 
   154     001F                     ADCON0          equ	31	;# 
   155     0081                     OPTION_REG      equ	129	;# 
   156     0085                     TRISA           equ	133	;# 
   157     0086                     TRISB           equ	134	;# 
   158     0087                     TRISC           equ	135	;# 
   159     0088                     TRISD           equ	136	;# 
   160     0089                     TRISE           equ	137	;# 
   161     008C                     PIE1            equ	140	;# 
   162     008D                     PIE2            equ	141	;# 
   163     008E                     PCON            equ	142	;# 
   164     0091                     SSPCON2         equ	145	;# 
   165     0092                     PR2             equ	146	;# 
   166     0093                     SSPADD          equ	147	;# 
   167     0094                     SSPSTAT         equ	148	;# 
   168     0098                     TXSTA           equ	152	;# 
   169     0099                     SPBRG           equ	153	;# 
   170     009C                     CMCON           equ	156	;# 
   171     009D                     CVRCON          equ	157	;# 
   172     009E                     ADRESL          equ	158	;# 
   173     009F                     ADCON1          equ	159	;# 
   174     010C                     EEDATA          equ	268	;# 
   175     010D                     EEADR           equ	269	;# 
   176     010E                     EEDATH          equ	270	;# 
   177     010F                     EEADRH          equ	271	;# 
   178     018C                     EECON1          equ	396	;# 
   179     018D                     EECON2          equ	397	;# 
   180     0008                     _PORTD          set	8
   181     0007                     _PORTC          set	7
   182     0088                     _TRISD          set	136
   183     0087                     _TRISC          set	135
   184                           
   185                           	psect	cinit
   186     07F3                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07F3                     __initialization:
   190                           
   191                           ; Clear objects allocated to BANK0
   192     07F3  1383               	bcf	3,7	;select IRP bank0
   193     07F4  3020               	movlw	low __pbssBANK0
   194     07F5  0084               	movwf	4
   195     07F6  3034               	movlw	low (__pbssBANK0+20)
   196     07F7  120A  118A  2631  120A  118A  	fcall	clear_ram0
   197     07FC                     end_of_initialization:	
   198                           ;End of C runtime variable initialization code
   199                           
   200     07FC                     __end_of__initialization:
   201     07FC  0183               	clrf	3
   202     07FD  120A  118A  2EC5   	ljmp	_main	;jump to C main() function
   203                           
   204                           	psect	bssBANK0
   205     0020                     __pbssBANK0:
   206     0020                     _k:
   207     0020                     	ds	5
   208     0025                     _n:
   209     0025                     	ds	2
   210     0027                     _m:
   211     0027                     	ds	2
   212     0029                     _delaycount:
   213     0029                     	ds	2
   214     002B                     _sum:
   215     002B                     	ds	2
   216     002D                     _num2:
   217     002D                     	ds	2
   218     002F                     _num1:
   219     002F                     	ds	2
   220     0031                     _Plus:
   221     0031                     	ds	1
   222     0032                     _Equal:
   223     0032                     	ds	1
   224     0033                     _j:
   225     0033                     	ds	1
   226                           
   227                           	psect	clrtext
   228     0631                     clear_ram0:	
   229                           ;	Called with FSR containing the base address, and
   230                           ;	W with the last address+1
   231                           
   232     0631  0064               	clrwdt	;clear the watchdog before getting into this loop
   233     0632                     clrloop0:
   234     0632  0180               	clrf	0	;clear RAM location pointed to by FSR
   235     0633  0A84               	incf	4,f	;increment pointer
   236     0634  0604               	xorwf	4,w	;XOR with final address
   237     0635  1903               	btfsc	3,2	;have we reached the end yet?
   238     0636  3400               	retlw	0	;all done for this memory range, return
   239     0637  0604               	xorwf	4,w	;XOR again to restore value
   240     0638  2E32               	goto	clrloop0	;do the next byte
   241                           
   242                           	psect	cstackCOMMON
   243     0070                     __pcstackCOMMON:
   244     0070                     ?_Lcd_Init:
   245     0070                     ?_Lcd_Command:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_Lcd_Data:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_main:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?___lwdiv:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ___lwdiv@divisor:	
   258                           ; 2 bytes @ 0x0
   259                           
   260     0070                     ??_Lcd_Command:	
   261                           ; 2 bytes @ 0x0
   262                           
   263     0070                     ??_Lcd_Data:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268     0070                     	ds	2
   269     0072                     Lcd_Command@cmd:
   270     0072                     Lcd_Data@data:	
   271                           ; 1 bytes @ 0x2
   272                           
   273     0072                     ___lwdiv@dividend:	
   274                           ; 1 bytes @ 0x2
   275                           
   276                           
   277                           ; 2 bytes @ 0x2
   278     0072                     	ds	1
   279     0073                     ??_Lcd_Init:
   280                           
   281                           ; 1 bytes @ 0x3
   282     0073                     	ds	1
   283     0074                     ___lwdiv@quotient:
   284     0074                     ??___lwdiv:	
   285                           ; 2 bytes @ 0x4
   286                           
   287                           
   288                           ; 1 bytes @ 0x4
   289     0074                     	ds	2
   290     0076                     ___lwdiv@counter:
   291                           
   292                           ; 1 bytes @ 0x6
   293     0076                     	ds	1
   294     0077                     ?___bmul:
   295     0077                     ___bmul@multiplicand:	
   296                           ; 1 bytes @ 0x7
   297                           
   298                           
   299                           ; 1 bytes @ 0x7
   300     0077                     	ds	1
   301     0078                     ___bmul@product:
   302     0078                     ??___bmul:	
   303                           ; 1 bytes @ 0x8
   304                           
   305                           
   306                           ; 1 bytes @ 0x8
   307     0078                     	ds	1
   308     0079                     ___bmul@multiplier:
   309                           
   310                           ; 1 bytes @ 0x9
   311     0079                     	ds	1
   312     007A                     ?_LcdOutput:
   313     007A                     LcdOutput@i:	
   314                           ; 1 bytes @ 0xA
   315                           
   316                           
   317                           ; 2 bytes @ 0xA
   318     007A                     	ds	2
   319     007C                     LcdOutput@s:
   320     007C                     ??_LcdOutput:	
   321                           ; 1 bytes @ 0xC
   322                           
   323                           
   324                           ; 1 bytes @ 0xC
   325     007C                     	ds	1
   326     007D                     LcdOutput@j:
   327                           
   328                           ; 1 bytes @ 0xD
   329     007D                     	ds	1
   330     007E                     ??_main:
   331                           
   332                           	psect	maintext
   333     06C5                     __pmaintext:	
   334                           ; 1 bytes @ 0xE
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 26 in file "newmain.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : B00/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0
   357 ;;      Totals:         0       0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels required when called: 2
   360 ;; This function calls:
   361 ;;		_LcdOutput
   362 ;;		_Lcd_Command
   363 ;;		_Lcd_Data
   364 ;;		_Lcd_Init
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370     06C5                     _main:	
   371                           ;psect for function _main
   372                           
   373     06C5                     l878:	
   374                           ;incstack = 0
   375                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   376                           
   377                           
   378                           ;newmain.c: 28:     Lcd_Init();
   379     06C5  120A  118A  278C  120A  118A  	fcall	_Lcd_Init
   380     06CA                     l880:
   381                           
   382                           ;newmain.c: 30:     num1 = 468;
   383     06CA  30D4               	movlw	212
   384     06CB  1283               	bcf	3,5	;RP0=0, select bank0
   385     06CC  1303               	bcf	3,6	;RP1=0, select bank0
   386     06CD  00AF               	movwf	_num1
   387     06CE  3001               	movlw	1
   388     06CF  00B0               	movwf	_num1+1
   389     06D0                     l882:
   390                           
   391                           ;newmain.c: 31:     num2 = 253;
   392     06D0  30FD               	movlw	253
   393     06D1  00AD               	movwf	_num2
   394     06D2  3000               	movlw	0
   395     06D3  00AE               	movwf	_num2+1
   396     06D4                     l884:
   397                           
   398                           ;newmain.c: 32:     Equal = '=';
   399     06D4  303D               	movlw	61
   400     06D5  00B2               	movwf	_Equal
   401     06D6                     l886:
   402                           
   403                           ;newmain.c: 33:     Plus = '+';
   404     06D6  302B               	movlw	43
   405     06D7  00B1               	movwf	_Plus
   406                           
   407                           ;newmain.c: 36:     Lcd_Command(0x80);
   408     06D8  3080               	movlw	128
   409     06D9  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   410     06DE                     l888:
   411                           
   412                           ;newmain.c: 37:     LcdOutput(num1);
   413     06DE  30D4               	movlw	212
   414     06DF  00FA               	movwf	LcdOutput@i
   415     06E0  3001               	movlw	1
   416     06E1  00FB               	movwf	LcdOutput@i+1
   417     06E2  120A  118A  2727  120A  118A  	fcall	_LcdOutput
   418     06E7                     l890:
   419                           
   420                           ;newmain.c: 40:     Lcd_Command(0x83);
   421     06E7  3083               	movlw	131
   422     06E8  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   423     06ED                     l892:
   424                           
   425                           ;newmain.c: 41:     Lcd_Data(Plus);
   426     06ED  302B               	movlw	43
   427     06EE  120A  118A  264C  120A  118A  	fcall	_Lcd_Data
   428     06F3                     l894:
   429                           
   430                           ;newmain.c: 44:     Lcd_Command(0x84);
   431     06F3  3084               	movlw	132
   432     06F4  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   433                           
   434                           ;newmain.c: 45:     LcdOutput(num2);
   435     06F9  30FD               	movlw	253
   436     06FA  00FA               	movwf	LcdOutput@i
   437     06FB  3000               	movlw	0
   438     06FC  00FB               	movwf	LcdOutput@i+1
   439     06FD  120A  118A  2727  120A  118A  	fcall	_LcdOutput
   440     0702                     l896:
   441                           
   442                           ;newmain.c: 48:     Lcd_Command(0x87);
   443     0702  3087               	movlw	135
   444     0703  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   445     0708                     l898:
   446                           
   447                           ;newmain.c: 49:     Lcd_Data(Equal);
   448     0708  303D               	movlw	61
   449     0709  120A  118A  264C  120A  118A  	fcall	_Lcd_Data
   450     070E                     l900:
   451                           
   452                           ;newmain.c: 52:     sum = num1 + num2;
   453     070E  30D1               	movlw	209
   454     070F  1283               	bcf	3,5	;RP0=0, select bank0
   455     0710  1303               	bcf	3,6	;RP1=0, select bank0
   456     0711  00AB               	movwf	_sum
   457     0712  3002               	movlw	2
   458     0713  00AC               	movwf	_sum+1
   459     0714                     l902:
   460                           
   461                           ;newmain.c: 53:     Lcd_Command(0x88);
   462     0714  3088               	movlw	136
   463     0715  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   464     071A                     l904:
   465                           
   466                           ;newmain.c: 54:     LcdOutput(sum);
   467     071A  30D1               	movlw	209
   468     071B  00FA               	movwf	LcdOutput@i
   469     071C  3002               	movlw	2
   470     071D  00FB               	movwf	LcdOutput@i+1
   471     071E  120A  118A  2727  120A  118A  	fcall	_LcdOutput
   472     0723                     l43:	
   473                           ;newmain.c: 56:     while (1);
   474                           
   475     0723                     l44:
   476     0723  2F23               	goto	l43
   477     0724  120A  118A  2800   	ljmp	start
   478     0727                     __end_of_main:
   479                           
   480                           	psect	text1
   481     078C                     __ptext1:	
   482 ;; *************** function _Lcd_Init *****************
   483 ;; Defined at:
   484 ;;		line 60 in file "newmain.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          2       0       0       0       0
   501 ;;      Totals:         2       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		_Lcd_Command
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512     078C                     _Lcd_Init:	
   513                           ;psect for function _Lcd_Init
   514                           
   515     078C                     l822:	
   516                           ;incstack = 0
   517                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   518                           
   519                           
   520                           ;newmain.c: 61:     TRISC = 0x00;
   521     078C  1683               	bsf	3,5	;RP0=1, select bank1
   522     078D  1303               	bcf	3,6	;RP1=0, select bank1
   523     078E  0187               	clrf	7	;volatile
   524                           
   525                           ;newmain.c: 62:     TRISD = 0x00;
   526     078F  0188               	clrf	8	;volatile
   527     0790                     l824:
   528                           
   529                           ;newmain.c: 65:     Lcd_Command(0x30);
   530     0790  3030               	movlw	48
   531     0791  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   532     0796                     l826:
   533                           
   534                           ;newmain.c: 66:     _delay((unsigned long)((100)*(6000000/4000.0)));
   535     0796  30C3               	movlw	195
   536     0797  00F4               	movwf	??_Lcd_Init+1
   537     0798  30CD               	movlw	205
   538     0799  00F3               	movwf	??_Lcd_Init
   539     079A                     u247:
   540     079A  0BF3               	decfsz	??_Lcd_Init,f
   541     079B  2F9A               	goto	u247
   542     079C  0BF4               	decfsz	??_Lcd_Init+1,f
   543     079D  2F9A               	goto	u247
   544     079E                     l828:
   545                           
   546                           ;newmain.c: 67:     Lcd_Command(0x30);
   547     079E  3030               	movlw	48
   548     079F  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   549     07A4                     l830:
   550                           
   551                           ;newmain.c: 68:     _delay((unsigned long)((100)*(6000000/4000.0)));
   552     07A4  30C3               	movlw	195
   553     07A5  00F4               	movwf	??_Lcd_Init+1
   554     07A6  30CD               	movlw	205
   555     07A7  00F3               	movwf	??_Lcd_Init
   556     07A8                     u257:
   557     07A8  0BF3               	decfsz	??_Lcd_Init,f
   558     07A9  2FA8               	goto	u257
   559     07AA  0BF4               	decfsz	??_Lcd_Init+1,f
   560     07AB  2FA8               	goto	u257
   561     07AC                     l832:
   562                           
   563                           ;newmain.c: 69:     Lcd_Command(0x30);
   564     07AC  3030               	movlw	48
   565     07AD  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   566     07B2                     l834:
   567                           
   568                           ;newmain.c: 70:     _delay((unsigned long)((100)*(6000000/4000.0)));
   569     07B2  30C3               	movlw	195
   570     07B3  00F4               	movwf	??_Lcd_Init+1
   571     07B4  30CD               	movlw	205
   572     07B5  00F3               	movwf	??_Lcd_Init
   573     07B6                     u267:
   574     07B6  0BF3               	decfsz	??_Lcd_Init,f
   575     07B7  2FB6               	goto	u267
   576     07B8  0BF4               	decfsz	??_Lcd_Init+1,f
   577     07B9  2FB6               	goto	u267
   578     07BA                     l836:
   579                           
   580                           ;newmain.c: 71:     Lcd_Command(0x38);
   581     07BA  3038               	movlw	56
   582     07BB  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   583     07C0                     l838:
   584                           
   585                           ;newmain.c: 72:     _delay((unsigned long)((100)*(6000000/4000.0)));
   586     07C0  30C3               	movlw	195
   587     07C1  00F4               	movwf	??_Lcd_Init+1
   588     07C2  30CD               	movlw	205
   589     07C3  00F3               	movwf	??_Lcd_Init
   590     07C4                     u277:
   591     07C4  0BF3               	decfsz	??_Lcd_Init,f
   592     07C5  2FC4               	goto	u277
   593     07C6  0BF4               	decfsz	??_Lcd_Init+1,f
   594     07C7  2FC4               	goto	u277
   595     07C8                     l840:
   596                           
   597                           ;newmain.c: 73:     Lcd_Command(0x06);
   598     07C8  3006               	movlw	6
   599     07C9  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   600     07CE                     l842:
   601                           
   602                           ;newmain.c: 74:     _delay((unsigned long)((100)*(6000000/4000.0)));
   603     07CE  30C3               	movlw	195
   604     07CF  00F4               	movwf	??_Lcd_Init+1
   605     07D0  30CD               	movlw	205
   606     07D1  00F3               	movwf	??_Lcd_Init
   607     07D2                     u287:
   608     07D2  0BF3               	decfsz	??_Lcd_Init,f
   609     07D3  2FD2               	goto	u287
   610     07D4  0BF4               	decfsz	??_Lcd_Init+1,f
   611     07D5  2FD2               	goto	u287
   612     07D6                     l844:
   613                           
   614                           ;newmain.c: 75:     Lcd_Command(0x0C);
   615     07D6  300C               	movlw	12
   616     07D7  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   617     07DC                     l846:
   618                           
   619                           ;newmain.c: 76:     _delay((unsigned long)((100)*(6000000/4000.0)));
   620     07DC  30C3               	movlw	195
   621     07DD  00F4               	movwf	??_Lcd_Init+1
   622     07DE  30CD               	movlw	205
   623     07DF  00F3               	movwf	??_Lcd_Init
   624     07E0                     u297:
   625     07E0  0BF3               	decfsz	??_Lcd_Init,f
   626     07E1  2FE0               	goto	u297
   627     07E2  0BF4               	decfsz	??_Lcd_Init+1,f
   628     07E3  2FE0               	goto	u297
   629     07E4                     l848:
   630                           
   631                           ;newmain.c: 77:     Lcd_Command(0x01);
   632     07E4  3001               	movlw	1
   633     07E5  120A  118A  2667  120A  118A  	fcall	_Lcd_Command
   634     07EA                     l850:
   635                           
   636                           ;newmain.c: 78:     _delay((unsigned long)((100)*(6000000/4000.0)));
   637     07EA  30C3               	movlw	195
   638     07EB  00F4               	movwf	??_Lcd_Init+1
   639     07EC  30CD               	movlw	205
   640     07ED  00F3               	movwf	??_Lcd_Init
   641     07EE                     u307:
   642     07EE  0BF3               	decfsz	??_Lcd_Init,f
   643     07EF  2FEE               	goto	u307
   644     07F0  0BF4               	decfsz	??_Lcd_Init+1,f
   645     07F1  2FEE               	goto	u307
   646     07F2                     l49:
   647     07F2  0008               	return
   648     07F3                     __end_of_Lcd_Init:
   649                           
   650                           	psect	text2
   651     0667                     __ptext2:	
   652 ;; *************** function _Lcd_Command *****************
   653 ;; Defined at:
   654 ;;		line 109 in file "newmain.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  cmd             1    wreg     unsigned char 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  cmd             1    2[COMMON] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0
   670 ;;      Temps:          2       0       0       0       0
   671 ;;      Totals:         3       0       0       0       0
   672 ;;Total ram usage:        3 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_main
   678 ;;		_Lcd_Init
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682     0667                     _Lcd_Command:	
   683                           ;psect for function _Lcd_Command
   684                           
   685                           
   686                           ;incstack = 0
   687                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
   688                           ;Lcd_Command@cmd stored from wreg
   689     0667  00F2               	movwf	Lcd_Command@cmd
   690     0668                     l762:
   691                           
   692                           ;newmain.c: 110:     PORTC &= ~0x08;
   693     0668  30F7               	movlw	247
   694     0669  1283               	bcf	3,5	;RP0=0, select bank0
   695     066A  1303               	bcf	3,6	;RP1=0, select bank0
   696     066B  0587               	andwf	7,f	;volatile
   697     066C                     l764:
   698                           
   699                           ;newmain.c: 111:     PORTD = cmd;
   700     066C  0872               	movf	Lcd_Command@cmd,w
   701     066D  0088               	movwf	8	;volatile
   702     066E                     l766:
   703                           
   704                           ;newmain.c: 112:     PORTC |= 0x01;
   705     066E  1407               	bsf	7,0	;volatile
   706     066F                     l768:
   707                           
   708                           ;newmain.c: 113:     _delay((unsigned long)((1)*(6000000/4000.0)));
   709     066F  30D6               	movlw	214
   710     0670  00F0               	movwf	??_Lcd_Command
   711     0671                     u317:
   712     0671  2E72               	nop2
   713     0672  2E73               	nop2
   714     0673  0BF0               	decfsz	??_Lcd_Command,f
   715     0674  2E71               	goto	u317
   716     0675  0000               	nop
   717                           
   718                           ;newmain.c: 114:     PORTC &= ~0x01;
   719     0676  30FE               	movlw	254
   720     0677  1283               	bcf	3,5	;RP0=0, select bank0
   721     0678  1303               	bcf	3,6	;RP1=0, select bank0
   722     0679  0587               	andwf	7,f	;volatile
   723     067A                     l770:
   724                           
   725                           ;newmain.c: 115:     _delay((unsigned long)((3)*(6000000/4000.0)));
   726     067A  3006               	movlw	6
   727     067B  00F1               	movwf	??_Lcd_Command+1
   728     067C  30D7               	movlw	215
   729     067D  00F0               	movwf	??_Lcd_Command
   730     067E                     u327:
   731     067E  0BF0               	decfsz	??_Lcd_Command,f
   732     067F  2E7E               	goto	u327
   733     0680  0BF1               	decfsz	??_Lcd_Command+1,f
   734     0681  2E7E               	goto	u327
   735     0682                     l61:
   736     0682  0008               	return
   737     0683                     __end_of_Lcd_Command:
   738                           
   739                           	psect	text3
   740     0727                     __ptext3:	
   741 ;; *************** function _LcdOutput *****************
   742 ;; Defined at:
   743 ;;		line 82 in file "newmain.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  i               2   10[COMMON] unsigned int 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  j               1   13[COMMON] unsigned char 
   748 ;;  s               1   12[COMMON] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         2       0       0       0       0
   759 ;;      Locals:         2       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         4       0       0       0       0
   762 ;;Total ram usage:        4 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 1
   765 ;; This function calls:
   766 ;;		_Lcd_Data
   767 ;;		___bmul
   768 ;;		___lwdiv
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774     0727                     _LcdOutput:	
   775                           ;psect for function _LcdOutput
   776                           
   777     0727                     l852:	
   778                           ;incstack = 0
   779                           ; Regs used in _LcdOutput: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   780                           
   781                           
   782                           ;newmain.c: 83:     unsigned char s, j = 1;
   783     0727  3001               	movlw	1
   784     0728  00FD               	movwf	LcdOutput@j
   785     0729                     l854:
   786                           
   787                           ;newmain.c: 84:     m = i;
   788     0729  087B               	movf	LcdOutput@i+1,w
   789     072A  1283               	bcf	3,5	;RP0=0, select bank0
   790     072B  1303               	bcf	3,6	;RP1=0, select bank0
   791     072C  00A8               	movwf	_m+1
   792     072D  087A               	movf	LcdOutput@i,w
   793     072E  00A7               	movwf	_m
   794                           
   795                           ;newmain.c: 87:     while (m != 0) {
   796     072F  2F64               	goto	l864
   797     0730                     l856:
   798                           
   799                           ;newmain.c: 92:          s= m-((m/10)*10);
   800     0730  30F6               	movlw	246
   801     0731  00F7               	movwf	___bmul@multiplicand
   802     0732  0828               	movf	_m+1,w
   803     0733  00F3               	movwf	___lwdiv@dividend+1
   804     0734  0827               	movf	_m,w
   805     0735  00F2               	movwf	___lwdiv@dividend
   806     0736  300A               	movlw	10
   807     0737  00F0               	movwf	___lwdiv@divisor
   808     0738  3000               	movlw	0
   809     0739  00F1               	movwf	___lwdiv@divisor+1
   810     073A  120A  118A  2683  120A  118A  	fcall	___lwdiv
   811     073F  0870               	movf	?___lwdiv,w
   812     0740  120A  118A  2639  120A  118A  	fcall	___bmul
   813     0745  1283               	bcf	3,5	;RP0=0, select bank0
   814     0746  1303               	bcf	3,6	;RP1=0, select bank0
   815     0747  0727               	addwf	_m,w
   816     0748  00FC               	movwf	LcdOutput@s
   817     0749                     l858:
   818                           
   819                           ;newmain.c: 93:         k[j] = s;
   820     0749  087D               	movf	LcdOutput@j,w
   821     074A  3E20               	addlw	(low (_k| 0))& (0+255)
   822     074B  0084               	movwf	4
   823     074C  087C               	movf	LcdOutput@s,w
   824     074D  1383               	bcf	3,7	;select IRP bank0
   825     074E  0080               	movwf	0
   826     074F                     l860:
   827                           
   828                           ;newmain.c: 94:         j++;
   829     074F  3001               	movlw	1
   830     0750  07FD               	addwf	LcdOutput@j,f
   831     0751                     l862:
   832                           
   833                           ;newmain.c: 95:         m = m/10;
   834     0751  300A               	movlw	10
   835     0752  00F0               	movwf	___lwdiv@divisor
   836     0753  3000               	movlw	0
   837     0754  00F1               	movwf	___lwdiv@divisor+1
   838     0755  0828               	movf	_m+1,w
   839     0756  00F3               	movwf	___lwdiv@dividend+1
   840     0757  0827               	movf	_m,w
   841     0758  00F2               	movwf	___lwdiv@dividend
   842     0759  120A  118A  2683  120A  118A  	fcall	___lwdiv
   843     075E  0871               	movf	?___lwdiv+1,w
   844     075F  1283               	bcf	3,5	;RP0=0, select bank0
   845     0760  1303               	bcf	3,6	;RP1=0, select bank0
   846     0761  00A8               	movwf	_m+1
   847     0762  0870               	movf	?___lwdiv,w
   848     0763  00A7               	movwf	_m
   849     0764                     l864:
   850                           
   851                           ;newmain.c: 87:     while (m != 0) {
   852     0764  0827               	movf	_m,w
   853     0765  0428               	iorwf	_m+1,w
   854     0766  1D03               	btfss	3,2
   855     0767  2F69               	goto	u221
   856     0768  2F6A               	goto	u220
   857     0769                     u221:
   858     0769  2F30               	goto	l856
   859     076A                     u220:
   860     076A                     l866:
   861                           
   862                           ;newmain.c: 97:     k[j] = '\0';
   863     076A  087D               	movf	LcdOutput@j,w
   864     076B  3E20               	addlw	(low (_k| 0))& (0+255)
   865     076C  0084               	movwf	4
   866     076D  1383               	bcf	3,7	;select IRP bank0
   867     076E  0180               	clrf	0
   868     076F                     l868:
   869                           
   870                           ;newmain.c: 98:     j--;
   871     076F  3001               	movlw	1
   872     0770  02FD               	subwf	LcdOutput@j,f
   873                           
   874                           ;newmain.c: 101:     while (j != 0) {
   875     0771  2F86               	goto	l876
   876     0772                     l870:
   877                           
   878                           ;newmain.c: 102:         n = 0x30 + k[j];
   879     0772  087D               	movf	LcdOutput@j,w
   880     0773  3E20               	addlw	(low (_k| 0))& (0+255)
   881     0774  0084               	movwf	4
   882     0775  1383               	bcf	3,7	;select IRP bank0
   883     0776  0800               	movf	0,w
   884     0777  3E30               	addlw	48
   885     0778  1283               	bcf	3,5	;RP0=0, select bank0
   886     0779  1303               	bcf	3,6	;RP1=0, select bank0
   887     077A  00A5               	movwf	_n
   888     077B  3000               	movlw	0
   889     077C  1803               	skipnc
   890     077D  3001               	movlw	1
   891     077E  00A6               	movwf	_n+1
   892     077F                     l872:
   893                           
   894                           ;newmain.c: 103:         Lcd_Data(n);
   895     077F  0825               	movf	_n,w
   896     0780  120A  118A  264C  120A  118A  	fcall	_Lcd_Data
   897     0785  2F6F               	goto	l868
   898     0786                     l876:
   899                           
   900                           ;newmain.c: 101:     while (j != 0) {
   901     0786  087D               	movf	LcdOutput@j,w
   902     0787  1D03               	btfss	3,2
   903     0788  2F8A               	goto	u231
   904     0789  2F8B               	goto	u230
   905     078A                     u231:
   906     078A  2F72               	goto	l870
   907     078B                     u230:
   908     078B                     l58:
   909     078B  0008               	return
   910     078C                     __end_of_LcdOutput:
   911                           
   912                           	psect	text4
   913     0683                     __ptext4:	
   914 ;; *************** function ___lwdiv *****************
   915 ;; Defined at:
   916 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  divisor         2    0[COMMON] unsigned int 
   919 ;;  dividend        2    2[COMMON] unsigned int 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  quotient        2    4[COMMON] unsigned int 
   922 ;;  counter         1    6[COMMON] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  2    0[COMMON] unsigned int 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         4       0       0       0       0
   933 ;;      Locals:         3       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0
   935 ;;      Totals:         7       0       0       0       0
   936 ;;Total ram usage:        7 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_LcdOutput
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945     0683                     ___lwdiv:	
   946                           ;psect for function ___lwdiv
   947                           
   948     0683                     l796:	
   949                           ;incstack = 0
   950                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   951                           
   952     0683  01F4               	clrf	___lwdiv@quotient
   953     0684  01F5               	clrf	___lwdiv@quotient+1
   954     0685                     l798:
   955     0685  0870               	movf	___lwdiv@divisor,w
   956     0686  0471               	iorwf	___lwdiv@divisor+1,w
   957     0687  1903               	btfsc	3,2
   958     0688  2E8A               	goto	u151
   959     0689  2E8B               	goto	u150
   960     068A                     u151:
   961     068A  2EC0               	goto	l818
   962     068B                     u150:
   963     068B                     l800:
   964     068B  3001               	movlw	1
   965     068C  00F6               	movwf	___lwdiv@counter
   966     068D  2E97               	goto	l806
   967     068E                     l802:
   968     068E  3001               	movlw	1
   969     068F                     u165:
   970     068F  1003               	clrc
   971     0690  0DF0               	rlf	___lwdiv@divisor,f
   972     0691  0DF1               	rlf	___lwdiv@divisor+1,f
   973     0692  3EFF               	addlw	-1
   974     0693  1D03               	skipz
   975     0694  2E8F               	goto	u165
   976     0695                     l804:
   977     0695  3001               	movlw	1
   978     0696  07F6               	addwf	___lwdiv@counter,f
   979     0697                     l806:
   980     0697  1FF1               	btfss	___lwdiv@divisor+1,7
   981     0698  2E9A               	goto	u171
   982     0699  2E9B               	goto	u170
   983     069A                     u171:
   984     069A  2E8E               	goto	l802
   985     069B                     u170:
   986     069B                     l808:
   987     069B  3001               	movlw	1
   988     069C                     u185:
   989     069C  1003               	clrc
   990     069D  0DF4               	rlf	___lwdiv@quotient,f
   991     069E  0DF5               	rlf	___lwdiv@quotient+1,f
   992     069F  3EFF               	addlw	-1
   993     06A0  1D03               	skipz
   994     06A1  2E9C               	goto	u185
   995     06A2  0871               	movf	___lwdiv@divisor+1,w
   996     06A3  0273               	subwf	___lwdiv@dividend+1,w
   997     06A4  1D03               	skipz
   998     06A5  2EA8               	goto	u195
   999     06A6  0870               	movf	___lwdiv@divisor,w
  1000     06A7  0272               	subwf	___lwdiv@dividend,w
  1001     06A8                     u195:
  1002     06A8  1C03               	skipc
  1003     06A9  2EAB               	goto	u191
  1004     06AA  2EAC               	goto	u190
  1005     06AB                     u191:
  1006     06AB  2EB3               	goto	l814
  1007     06AC                     u190:
  1008     06AC                     l810:
  1009     06AC  0870               	movf	___lwdiv@divisor,w
  1010     06AD  02F2               	subwf	___lwdiv@dividend,f
  1011     06AE  0871               	movf	___lwdiv@divisor+1,w
  1012     06AF  1C03               	skipc
  1013     06B0  03F3               	decf	___lwdiv@dividend+1,f
  1014     06B1  02F3               	subwf	___lwdiv@dividend+1,f
  1015     06B2                     l812:
  1016     06B2  1474               	bsf	___lwdiv@quotient,0
  1017     06B3                     l814:
  1018     06B3  3001               	movlw	1
  1019     06B4                     u205:
  1020     06B4  1003               	clrc
  1021     06B5  0CF1               	rrf	___lwdiv@divisor+1,f
  1022     06B6  0CF0               	rrf	___lwdiv@divisor,f
  1023     06B7  3EFF               	addlw	-1
  1024     06B8  1D03               	skipz
  1025     06B9  2EB4               	goto	u205
  1026     06BA                     l816:
  1027     06BA  3001               	movlw	1
  1028     06BB  02F6               	subwf	___lwdiv@counter,f
  1029     06BC  1D03               	btfss	3,2
  1030     06BD  2EBF               	goto	u211
  1031     06BE  2EC0               	goto	u210
  1032     06BF                     u211:
  1033     06BF  2E9B               	goto	l808
  1034     06C0                     u210:
  1035     06C0                     l818:
  1036     06C0  0875               	movf	___lwdiv@quotient+1,w
  1037     06C1  00F1               	movwf	?___lwdiv+1
  1038     06C2  0874               	movf	___lwdiv@quotient,w
  1039     06C3  00F0               	movwf	?___lwdiv
  1040     06C4                     l436:
  1041     06C4  0008               	return
  1042     06C5                     __end_of___lwdiv:
  1043                           
  1044                           	psect	text5
  1045     0639                     __ptext5:	
  1046 ;; *************** function ___bmul *****************
  1047 ;; Defined at:
  1048 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  multiplier      1    wreg     unsigned char 
  1051 ;;  multiplicand    1    7[COMMON] unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  multiplier      1    9[COMMON] unsigned char 
  1054 ;;  product         1    8[COMMON] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      unsigned char 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         1       0       0       0       0
  1065 ;;      Locals:         2       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0
  1067 ;;      Totals:         3       0       0       0       0
  1068 ;;Total ram usage:        3 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_LcdOutput
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077     0639                     ___bmul:	
  1078                           ;psect for function ___bmul
  1079                           
  1080                           
  1081                           ;incstack = 0
  1082                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1083                           ;___bmul@multiplier stored from wreg
  1084     0639  00F9               	movwf	___bmul@multiplier
  1085     063A                     l782:
  1086     063A  01F8               	clrf	___bmul@product
  1087     063B                     l784:
  1088     063B  1C79               	btfss	___bmul@multiplier,0
  1089     063C  2E3E               	goto	u131
  1090     063D  2E3F               	goto	u130
  1091     063E                     u131:
  1092     063E  2E41               	goto	l788
  1093     063F                     u130:
  1094     063F                     l786:
  1095     063F  0877               	movf	___bmul@multiplicand,w
  1096     0640  07F8               	addwf	___bmul@product,f
  1097     0641                     l788:
  1098     0641  1003               	clrc
  1099     0642  0DF7               	rlf	___bmul@multiplicand,f
  1100     0643                     l790:
  1101     0643  1003               	clrc
  1102     0644  0CF9               	rrf	___bmul@multiplier,f
  1103     0645  0879               	movf	___bmul@multiplier,w
  1104     0646  1D03               	btfss	3,2
  1105     0647  2E49               	goto	u141
  1106     0648  2E4A               	goto	u140
  1107     0649                     u141:
  1108     0649  2E3B               	goto	l784
  1109     064A                     u140:
  1110     064A                     l792:
  1111     064A  0878               	movf	___bmul@product,w
  1112     064B                     l182:
  1113     064B  0008               	return
  1114     064C                     __end_of___bmul:
  1115                           
  1116                           	psect	text6
  1117     064C                     __ptext6:	
  1118 ;; *************** function _Lcd_Data *****************
  1119 ;; Defined at:
  1120 ;;		line 119 in file "newmain.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  data            1    wreg     unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  data            1    2[COMMON] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0
  1136 ;;      Temps:          2       0       0       0       0
  1137 ;;      Totals:         3       0       0       0       0
  1138 ;;Total ram usage:        3 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;;		_LcdOutput
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148     064C                     _Lcd_Data:	
  1149                           ;psect for function _Lcd_Data
  1150                           
  1151                           
  1152                           ;incstack = 0
  1153                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0]
  1154                           ;Lcd_Data@data stored from wreg
  1155     064C  00F2               	movwf	Lcd_Data@data
  1156     064D                     l772:
  1157                           
  1158                           ;newmain.c: 120:     PORTC |= 0x08;
  1159     064D  1283               	bcf	3,5	;RP0=0, select bank0
  1160     064E  1303               	bcf	3,6	;RP1=0, select bank0
  1161     064F  1587               	bsf	7,3	;volatile
  1162     0650                     l774:
  1163                           
  1164                           ;newmain.c: 121:     PORTD = data;
  1165     0650  0872               	movf	Lcd_Data@data,w
  1166     0651  0088               	movwf	8	;volatile
  1167     0652                     l776:
  1168                           
  1169                           ;newmain.c: 122:     PORTC |= 0x01;
  1170     0652  1407               	bsf	7,0	;volatile
  1171                           
  1172                           ;newmain.c: 123:     _delay((unsigned long)((1)*(6000000/4000.0)));
  1173     0653  30D6               	movlw	214
  1174     0654  00F0               	movwf	??_Lcd_Data
  1175     0655                     u337:
  1176     0655  2E56               	nop2
  1177     0656  2E57               	nop2
  1178     0657  0BF0               	decfsz	??_Lcd_Data,f
  1179     0658  2E55               	goto	u337
  1180     0659  0000               	nop
  1181     065A                     l778:
  1182                           
  1183                           ;newmain.c: 124:     PORTC &= ~0x01;
  1184     065A  30FE               	movlw	254
  1185     065B  1283               	bcf	3,5	;RP0=0, select bank0
  1186     065C  1303               	bcf	3,6	;RP1=0, select bank0
  1187     065D  0587               	andwf	7,f	;volatile
  1188     065E                     l780:
  1189                           
  1190                           ;newmain.c: 125:     _delay((unsigned long)((3)*(6000000/4000.0)));
  1191     065E  3006               	movlw	6
  1192     065F  00F1               	movwf	??_Lcd_Data+1
  1193     0660  30D7               	movlw	215
  1194     0661  00F0               	movwf	??_Lcd_Data
  1195     0662                     u347:
  1196     0662  0BF0               	decfsz	??_Lcd_Data,f
  1197     0663  2E62               	goto	u347
  1198     0664  0BF1               	decfsz	??_Lcd_Data+1,f
  1199     0665  2E62               	goto	u347
  1200     0666                     l64:
  1201     0666  0008               	return
  1202     0667                     __end_of_Lcd_Data:
  1203     0002                     ___latbits      equ	2
  1204     007E                     btemp           set	126	;btemp
  1205     007E                     wtemp0          set	126
  1206                           
  1207                           	psect	config
  1208                           
  1209                           ;Config register CONFIG @ 0x2007
  1210                           ;	Oscillator Selection bits
  1211                           ;	FOSC = EXTRC, RC oscillator
  1212                           ;	Watchdog Timer Enable bit
  1213                           ;	WDTE = OFF, WDT disabled
  1214                           ;	Power-up Timer Enable bit
  1215                           ;	PWRTE = OFF, PWRT disabled
  1216                           ;	Brown-out Reset Enable bit
  1217                           ;	BOREN = ON, BOR enabled
  1218                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1219                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1220                           ;	Data EEPROM Memory Code Protection bit
  1221                           ;	CPD = OFF, Data EEPROM code protection off
  1222                           ;	Flash Program Memory Write Enable bits
  1223                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1224                           ;	In-Circuit Debugger Mode bit
  1225                           ;	DEBUG = 0x1, unprogrammed default
  1226                           ;	Flash Program Memory Code Protection bit
  1227                           ;	CP = OFF, Code protection off
  1228     2007                     	org	8199
  1229     2007  3F7B               	dw	16251

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LcdOutput
    _Lcd_Init->_Lcd_Command
    _LcdOutput->___bmul
    ___bmul->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     530
                          _LcdOutput
                        _Lcd_Command
                           _Lcd_Data
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      29
                                              3 COMMON     2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LcdOutput                                            4     2      2     443
                                             10 COMMON     4     2      2
                           _Lcd_Data
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     108
                                              7 COMMON     3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdOutput
     _Lcd_Data
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
   _Lcd_Command
   _Lcd_Data
   _Lcd_Init
     _Lcd_Command

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      0      20     25.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      34      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 19 15:39:18 2025

                      _j 0033                        _k 0020                        _m 0027  
                      _n 0025           ___bmul@product 0078                       l43 0723  
                     l44 0723                       l61 0682                       l64 0666  
                     l49 07F2                       l58 078B                       fsr 0004  
                    l182 064B                      l436 06C4                      l800 068B  
                    l810 06AC                      l802 068E                      l812 06B2  
                    l804 0695                      l900 070E                      l814 06B3  
                    l806 0697                      l830 07A4                      l822 078C  
                    l902 0714                      l816 06BA                      l808 069B  
                    l840 07C8                      l832 07AC                      l824 0790  
                    l904 071A                      l818 06C0                      l770 067A  
                    l762 0668                      l850 07EA                      l842 07CE  
                    l834 07B2                      l826 0796                      l780 065E  
                    l772 064D                      l860 074F                      l852 0727  
                    l764 066C                      l844 07D6                      l836 07BA  
                    l828 079E                      l774 0650                      l790 0643  
                    l782 063A                      l870 0772                      l862 0751  
                    l854 0729                      l766 066E                      l846 07DC  
                    l838 07C0                      l776 0652                      l792 064A  
                    l784 063B                      l872 077F                      l856 0730  
                    l864 0764                      l768 066F                      l848 07E4  
                    l880 06CA                      l778 065A                      l786 063F  
                    l866 076A                      l858 0749                      l890 06E7  
                    l882 06D0                      l788 0641                      l796 0683  
                    l876 0786                      l868 076F                      l892 06ED  
                    l884 06D4                      l798 0685                      l894 06F3  
                    l886 06D6                      l878 06C5                      l896 0702  
                    l888 06DE                      l898 0708                      u130 063F  
                    u210 06C0                      u131 063E                      u211 06BF  
                    u140 064A                      u220 076A                      u141 0649  
                    u205 06B4                      u221 0769                      u150 068B  
                    u230 078B                      u151 068A                      u231 078A  
                    u170 069B                      u171 069A                      u307 07EE  
                    u165 068F                      u317 0671                      u190 06AC  
                    u191 06AB                      u327 067E                      u247 079A  
                    u337 0655                      u185 069C                      u257 07A8  
                    u347 0662                      u195 06A8                      u267 07B6  
                    u277 07C4                      u287 07D2                      u297 07E0  
                    fsr0 0004                      _sum 002B                      indf 0000  
    __end_of_Lcd_Command 0683                     _Plus 0031                     _main 06C5  
                   _num1 002F                     _num2 002D                     btemp 007E  
                   start 0000        ___bmul@multiplier 0079                    ?_main 0070  
        __end_of___lwdiv 06C5                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    _Equal 0032  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Data 0667  
       __end_of_Lcd_Init 07F3          __initialization 07F3             __end_of_main 0727  
            _Lcd_Command 0667                   ??_main 007E                   ___bmul 0639  
              ??___lwdiv 0074  __end_of__initialization 07FC      ___bmul@multiplicand 0077  
      __end_of_LcdOutput 078C           __pcstackCOMMON 0070                ?_Lcd_Data 0070  
              ?_Lcd_Init 0070               __pbssBANK0 0020               _delaycount 0029  
             __pmaintext 06C5                  ?___bmul 0077               ??_Lcd_Data 0070  
             ??_Lcd_Init 0073                  ___lwdiv 0683             ?_Lcd_Command 0070  
                __ptext1 078C                  __ptext2 0667                  __ptext3 0727  
                __ptext4 0683                  __ptext5 0639                  __ptext6 064C  
                clrloop0 0632     end_of_initialization 07FC           __end_of___bmul 064C  
              _LcdOutput 0727      start_initialization 07F3                 ??___bmul 0078  
             ?_LcdOutput 007A                ___latbits 0002         ___lwdiv@dividend 0072  
               ?___lwdiv 0070         ___lwdiv@quotient 0074             Lcd_Data@data 0072  
              clear_ram0 0631              ??_LcdOutput 007C                 _Lcd_Data 064C  
               _Lcd_Init 078C          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
          ??_Lcd_Command 0070           Lcd_Command@cmd 0072               LcdOutput@i 007A  
             LcdOutput@j 007D               LcdOutput@s 007C  
