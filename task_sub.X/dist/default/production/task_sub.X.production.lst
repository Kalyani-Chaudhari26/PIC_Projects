

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 26 12:14:40 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,space=0,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0004                     fsr             equ	4
    55     0004                     fsr0            equ	4
    56     0000                     indf            equ	0
    57     0000                     indf0           equ	0
    58     0002                     pc              equ	2
    59     0002                     pcl             equ	2
    60     000A                     pclath          equ	10
    61     0003                     status          equ	3
    62     0000                     INDF            equ	0	;# 
    63     0001                     TMR0            equ	1	;# 
    64     0002                     PCL             equ	2	;# 
    65     0003                     STATUS          equ	3	;# 
    66     0004                     FSR             equ	4	;# 
    67     0005                     PORTA           equ	5	;# 
    68     0006                     PORTB           equ	6	;# 
    69     0007                     PORTC           equ	7	;# 
    70     0008                     PORTD           equ	8	;# 
    71     0009                     PORTE           equ	9	;# 
    72     000A                     PCLATH          equ	10	;# 
    73     000B                     INTCON          equ	11	;# 
    74     000C                     PIR1            equ	12	;# 
    75     000D                     PIR2            equ	13	;# 
    76     000E                     TMR1            equ	14	;# 
    77     000E                     TMR1L           equ	14	;# 
    78     000F                     TMR1H           equ	15	;# 
    79     0010                     T1CON           equ	16	;# 
    80     0011                     TMR2            equ	17	;# 
    81     0012                     T2CON           equ	18	;# 
    82     0013                     SSPBUF          equ	19	;# 
    83     0014                     SSPCON          equ	20	;# 
    84     0015                     CCPR1           equ	21	;# 
    85     0015                     CCPR1L          equ	21	;# 
    86     0016                     CCPR1H          equ	22	;# 
    87     0017                     CCP1CON         equ	23	;# 
    88     0018                     RCSTA           equ	24	;# 
    89     0019                     TXREG           equ	25	;# 
    90     001A                     RCREG           equ	26	;# 
    91     001B                     CCPR2           equ	27	;# 
    92     001B                     CCPR2L          equ	27	;# 
    93     001C                     CCPR2H          equ	28	;# 
    94     001D                     CCP2CON         equ	29	;# 
    95     001E                     ADRESH          equ	30	;# 
    96     001F                     ADCON0          equ	31	;# 
    97     0081                     OPTION_REG      equ	129	;# 
    98     0085                     TRISA           equ	133	;# 
    99     0086                     TRISB           equ	134	;# 
   100     0087                     TRISC           equ	135	;# 
   101     0088                     TRISD           equ	136	;# 
   102     0089                     TRISE           equ	137	;# 
   103     008C                     PIE1            equ	140	;# 
   104     008D                     PIE2            equ	141	;# 
   105     008E                     PCON            equ	142	;# 
   106     0091                     SSPCON2         equ	145	;# 
   107     0092                     PR2             equ	146	;# 
   108     0093                     SSPADD          equ	147	;# 
   109     0094                     SSPSTAT         equ	148	;# 
   110     0098                     TXSTA           equ	152	;# 
   111     0099                     SPBRG           equ	153	;# 
   112     009C                     CMCON           equ	156	;# 
   113     009D                     CVRCON          equ	157	;# 
   114     009E                     ADRESL          equ	158	;# 
   115     009F                     ADCON1          equ	159	;# 
   116     010C                     EEDATA          equ	268	;# 
   117     010D                     EEADR           equ	269	;# 
   118     010E                     EEDATH          equ	270	;# 
   119     010F                     EEADRH          equ	271	;# 
   120     018C                     EECON1          equ	396	;# 
   121     018D                     EECON2          equ	397	;# 
   122     0000                     INDF            equ	0	;# 
   123     0001                     TMR0            equ	1	;# 
   124     0002                     PCL             equ	2	;# 
   125     0003                     STATUS          equ	3	;# 
   126     0004                     FSR             equ	4	;# 
   127     0005                     PORTA           equ	5	;# 
   128     0006                     PORTB           equ	6	;# 
   129     0007                     PORTC           equ	7	;# 
   130     0008                     PORTD           equ	8	;# 
   131     0009                     PORTE           equ	9	;# 
   132     000A                     PCLATH          equ	10	;# 
   133     000B                     INTCON          equ	11	;# 
   134     000C                     PIR1            equ	12	;# 
   135     000D                     PIR2            equ	13	;# 
   136     000E                     TMR1            equ	14	;# 
   137     000E                     TMR1L           equ	14	;# 
   138     000F                     TMR1H           equ	15	;# 
   139     0010                     T1CON           equ	16	;# 
   140     0011                     TMR2            equ	17	;# 
   141     0012                     T2CON           equ	18	;# 
   142     0013                     SSPBUF          equ	19	;# 
   143     0014                     SSPCON          equ	20	;# 
   144     0015                     CCPR1           equ	21	;# 
   145     0015                     CCPR1L          equ	21	;# 
   146     0016                     CCPR1H          equ	22	;# 
   147     0017                     CCP1CON         equ	23	;# 
   148     0018                     RCSTA           equ	24	;# 
   149     0019                     TXREG           equ	25	;# 
   150     001A                     RCREG           equ	26	;# 
   151     001B                     CCPR2           equ	27	;# 
   152     001B                     CCPR2L          equ	27	;# 
   153     001C                     CCPR2H          equ	28	;# 
   154     001D                     CCP2CON         equ	29	;# 
   155     001E                     ADRESH          equ	30	;# 
   156     001F                     ADCON0          equ	31	;# 
   157     0081                     OPTION_REG      equ	129	;# 
   158     0085                     TRISA           equ	133	;# 
   159     0086                     TRISB           equ	134	;# 
   160     0087                     TRISC           equ	135	;# 
   161     0088                     TRISD           equ	136	;# 
   162     0089                     TRISE           equ	137	;# 
   163     008C                     PIE1            equ	140	;# 
   164     008D                     PIE2            equ	141	;# 
   165     008E                     PCON            equ	142	;# 
   166     0091                     SSPCON2         equ	145	;# 
   167     0092                     PR2             equ	146	;# 
   168     0093                     SSPADD          equ	147	;# 
   169     0094                     SSPSTAT         equ	148	;# 
   170     0098                     TXSTA           equ	152	;# 
   171     0099                     SPBRG           equ	153	;# 
   172     009C                     CMCON           equ	156	;# 
   173     009D                     CVRCON          equ	157	;# 
   174     009E                     ADRESL          equ	158	;# 
   175     009F                     ADCON1          equ	159	;# 
   176     010C                     EEDATA          equ	268	;# 
   177     010D                     EEADR           equ	269	;# 
   178     010E                     EEDATH          equ	270	;# 
   179     010F                     EEADRH          equ	271	;# 
   180     018C                     EECON1          equ	396	;# 
   181     018D                     EECON2          equ	397	;# 
   182     0008                     _PORTD          set	8
   183     0007                     _PORTC          set	7
   184     0088                     _TRISD          set	136
   185     0087                     _TRISC          set	135
   186                           
   187                           	psect	cinit
   188     07F3                     start_initialization:	
   189                           ; #config settings
   190                           
   191     07F3                     __initialization:
   192                           
   193                           ; Clear objects allocated to BANK0
   194     07F3  1383               	bcf	3,7	;select IRP bank0
   195     07F4  3020               	movlw	low __pbssBANK0
   196     07F5  0084               	movwf	4
   197     07F6  3034               	movlw	low (__pbssBANK0+20)
   198     07F7  120A  118A  2604  120A  118A  	fcall	clear_ram0
   199     07FC                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202     07FC                     __end_of__initialization:
   203     07FC  0183               	clrf	3
   204     07FD  120A  118A  2EC3   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssBANK0
   207     0020                     __pbssBANK0:
   208     0020                     _k:
   209     0020                     	ds	5
   210     0025                     _n:
   211     0025                     	ds	2
   212     0027                     _m:
   213     0027                     	ds	2
   214     0029                     _delaycount:
   215     0029                     	ds	2
   216     002B                     _sub:
   217     002B                     	ds	2
   218     002D                     _num2:
   219     002D                     	ds	2
   220     002F                     _num1:
   221     002F                     	ds	2
   222     0031                     _minus:
   223     0031                     	ds	1
   224     0032                     _Equal:
   225     0032                     	ds	1
   226     0033                     _j:
   227     0033                     	ds	1
   228                           
   229                           	psect	clrtext
   230     0604                     clear_ram0:	
   231                           ;	Called with FSR containing the base address, and
   232                           ;	W with the last address+1
   233                           
   234     0604  0064               	clrwdt	;clear the watchdog before getting into this loop
   235     0605                     clrloop0:
   236     0605  0180               	clrf	0	;clear RAM location pointed to by FSR
   237     0606  0A84               	incf	4,f	;increment pointer
   238     0607  0604               	xorwf	4,w	;XOR with final address
   239     0608  1903               	btfsc	3,2	;have we reached the end yet?
   240     0609  3400               	retlw	0	;all done for this memory range, return
   241     060A  0604               	xorwf	4,w	;XOR again to restore value
   242     060B  2E05               	goto	clrloop0	;do the next byte
   243                           
   244                           	psect	cstackCOMMON
   245     0070                     __pcstackCOMMON:
   246     0070                     ?_Lcd_Init:
   247     0070                     ?_Lcd_Command:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_Lcd_Data:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     ?___lwdiv:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0070                     ___lwdiv@divisor:	
   260                           ; 2 bytes @ 0x0
   261                           
   262     0070                     ??_Lcd_Command:	
   263                           ; 2 bytes @ 0x0
   264                           
   265     0070                     ??_Lcd_Data:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270     0070                     	ds	2
   271     0072                     Lcd_Command@cmd:
   272     0072                     Lcd_Data@data:	
   273                           ; 1 bytes @ 0x2
   274                           
   275     0072                     ___lwdiv@dividend:	
   276                           ; 1 bytes @ 0x2
   277                           
   278                           
   279                           ; 2 bytes @ 0x2
   280     0072                     	ds	1
   281     0073                     ??_Lcd_Init:
   282                           
   283                           ; 1 bytes @ 0x3
   284     0073                     	ds	1
   285     0074                     ___lwdiv@quotient:
   286     0074                     ??___lwdiv:	
   287                           ; 2 bytes @ 0x4
   288                           
   289                           
   290                           ; 1 bytes @ 0x4
   291     0074                     	ds	2
   292     0076                     ___lwdiv@counter:
   293                           
   294                           ; 1 bytes @ 0x6
   295     0076                     	ds	1
   296     0077                     ?___bmul:
   297     0077                     ___bmul@multiplicand:	
   298                           ; 1 bytes @ 0x7
   299                           
   300                           
   301                           ; 1 bytes @ 0x7
   302     0077                     	ds	1
   303     0078                     ___bmul@product:
   304     0078                     ??___bmul:	
   305                           ; 1 bytes @ 0x8
   306                           
   307                           
   308                           ; 1 bytes @ 0x8
   309     0078                     	ds	1
   310     0079                     ___bmul@multiplier:
   311                           
   312                           ; 1 bytes @ 0x9
   313     0079                     	ds	1
   314     007A                     ?_LcdOutput:
   315     007A                     LcdOutput@i:	
   316                           ; 1 bytes @ 0xA
   317                           
   318                           
   319                           ; 2 bytes @ 0xA
   320     007A                     	ds	2
   321     007C                     LcdOutput@s:
   322     007C                     ??_LcdOutput:	
   323                           ; 1 bytes @ 0xC
   324                           
   325                           
   326                           ; 1 bytes @ 0xC
   327     007C                     	ds	1
   328     007D                     LcdOutput@j:
   329                           
   330                           ; 1 bytes @ 0xD
   331     007D                     	ds	1
   332     007E                     ??_main:
   333                           
   334                           	psect	cstackBANK0
   335     0034                     __pcstackBANK0:	
   336                           ; 1 bytes @ 0xE
   337                           
   338     0034                     ?_Lcd_PrintSubtraction:
   339     0034                     Lcd_PrintSubtraction@num1:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 2 bytes @ 0x0
   344     0034                     	ds	2
   345     0036                     Lcd_PrintSubtraction@num2:
   346                           
   347                           ; 2 bytes @ 0x2
   348     0036                     	ds	2
   349     0038                     ??_Lcd_PrintSubtraction:
   350                           
   351                           ; 1 bytes @ 0x4
   352     0038                     	ds	1
   353     0039                     Lcd_PrintSubtraction@sub:
   354                           
   355                           ; 2 bytes @ 0x5
   356     0039                     	ds	2
   357                           
   358                           	psect	maintext
   359     06C3                     __pmaintext:	
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 28 in file "class4_sub.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : B00/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels required when called: 3
   385 ;; This function calls:
   386 ;;		_LcdOutput
   387 ;;		_Lcd_Command
   388 ;;		_Lcd_Data
   389 ;;		_Lcd_Init
   390 ;;		_Lcd_PrintSubtraction
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396     06C3                     _main:	
   397                           ;psect for function _main
   398                           
   399     06C3                     l903:	
   400                           ;incstack = 0
   401                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   402                           
   403                           
   404                           ;class4_sub.c: 29:     Lcd_Init();
   405     06C3  120A  118A  2725  120A  118A  	fcall	_Lcd_Init
   406     06C8                     l905:
   407                           
   408                           ;class4_sub.c: 31:     num1 = 200;
   409     06C8  30C8               	movlw	200
   410     06C9  1283               	bcf	3,5	;RP0=0, select bank0
   411     06CA  1303               	bcf	3,6	;RP1=0, select bank0
   412     06CB  00AF               	movwf	_num1
   413     06CC  3000               	movlw	0
   414     06CD  00B0               	movwf	_num1+1
   415     06CE                     l907:
   416                           
   417                           ;class4_sub.c: 32:     num2 = 100;
   418     06CE  3064               	movlw	100
   419     06CF  00AD               	movwf	_num2
   420     06D0  3000               	movlw	0
   421     06D1  00AE               	movwf	_num2+1
   422     06D2                     l909:
   423                           
   424                           ;class4_sub.c: 33:     Equal = '=';
   425     06D2  303D               	movlw	61
   426     06D3  00B2               	movwf	_Equal
   427     06D4                     l911:
   428                           
   429                           ;class4_sub.c: 34:     minus = '-';
   430     06D4  302D               	movlw	45
   431     06D5  00B1               	movwf	_minus
   432                           
   433                           ;class4_sub.c: 37:     Lcd_Command(0x80);
   434     06D6  3080               	movlw	128
   435     06D7  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
   436     06DC                     l913:
   437                           
   438                           ;class4_sub.c: 38:     LcdOutput(num1);
   439     06DC  30C8               	movlw	200
   440     06DD  00FA               	movwf	LcdOutput@i
   441     06DE  3000               	movlw	0
   442     06DF  00FB               	movwf	LcdOutput@i+1
   443     06E0  120A  118A  278C  120A  118A  	fcall	_LcdOutput
   444     06E5                     l915:
   445                           
   446                           ;class4_sub.c: 41:     Lcd_Command(0x83);
   447     06E5  3083               	movlw	131
   448     06E6  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
   449     06EB                     l917:
   450                           
   451                           ;class4_sub.c: 42:     Lcd_Data(minus);
   452     06EB  302D               	movlw	45
   453     06EC  120A  118A  260C  120A  118A  	fcall	_Lcd_Data
   454     06F1                     l919:
   455                           
   456                           ;class4_sub.c: 45:     Lcd_Command(0x84);
   457     06F1  3084               	movlw	132
   458     06F2  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
   459                           
   460                           ;class4_sub.c: 46:     LcdOutput(num2);
   461     06F7  3064               	movlw	100
   462     06F8  00FA               	movwf	LcdOutput@i
   463     06F9  3000               	movlw	0
   464     06FA  00FB               	movwf	LcdOutput@i+1
   465     06FB  120A  118A  278C  120A  118A  	fcall	_LcdOutput
   466     0700                     l921:
   467                           
   468                           ;class4_sub.c: 49:     Lcd_Command(0x87);
   469     0700  3087               	movlw	135
   470     0701  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
   471     0706                     l923:
   472                           
   473                           ;class4_sub.c: 50:     Lcd_Data(Equal);
   474     0706  303D               	movlw	61
   475     0707  120A  118A  260C  120A  118A  	fcall	_Lcd_Data
   476     070C                     l925:
   477                           
   478                           ;class4_sub.c: 53:     Lcd_Command(0x88);
   479     070C  3088               	movlw	136
   480     070D  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
   481     0712                     l927:
   482                           
   483                           ;class4_sub.c: 54:     Lcd_PrintSubtraction(200,100);
   484     0712  30C8               	movlw	200
   485     0713  1283               	bcf	3,5	;RP0=0, select bank0
   486     0714  1303               	bcf	3,6	;RP1=0, select bank0
   487     0715  00B4               	movwf	Lcd_PrintSubtraction@num1
   488     0716  3000               	movlw	0
   489     0717  00B5               	movwf	Lcd_PrintSubtraction@num1+1
   490     0718  3064               	movlw	100
   491     0719  00B6               	movwf	Lcd_PrintSubtraction@num2
   492     071A  3000               	movlw	0
   493     071B  00B7               	movwf	Lcd_PrintSubtraction@num2+1
   494     071C  120A  118A  2644  120A  118A  	fcall	_Lcd_PrintSubtraction
   495     0721                     l45:	
   496                           ;class4_sub.c: 56: while(1);
   497                           
   498     0721                     l46:
   499     0721  2F21               	goto	l45
   500     0722  120A  118A  2800   	ljmp	start
   501     0725                     __end_of_main:
   502                           
   503                           	psect	text1
   504     0644                     __ptext1:	
   505 ;; *************** function _Lcd_PrintSubtraction *****************
   506 ;; Defined at:
   507 ;;		line 59 in file "class4_sub.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  num1            2    0[BANK0 ] int 
   510 ;;  num2            2    2[BANK0 ] int 
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  sub             2    5[BANK0 ] int 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   522 ;;      Params:         0       4       0       0       0
   523 ;;      Locals:         0       2       0       0       0
   524 ;;      Temps:          0       1       0       0       0
   525 ;;      Totals:         0       7       0       0       0
   526 ;;Total ram usage:        7 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 2
   529 ;; This function calls:
   530 ;;		_LcdOutput
   531 ;;		_Lcd_Data
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537     0644                     _Lcd_PrintSubtraction:	
   538                           ;psect for function _Lcd_PrintSubtraction
   539                           
   540     0644                     l891:	
   541                           ;incstack = 0
   542                           ; Regs used in _Lcd_PrintSubtraction: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   543                           
   544                           
   545                           ;class4_sub.c: 60:     int sub;;class4_sub.c: 62:     if (num1 < num2) {
   546     0644  1283               	bcf	3,5	;RP0=0, select bank0
   547     0645  1303               	bcf	3,6	;RP1=0, select bank0
   548     0646  0835               	movf	Lcd_PrintSubtraction@num1+1,w
   549     0647  3A80               	xorlw	128
   550     0648  00B8               	movwf	??_Lcd_PrintSubtraction
   551     0649  0837               	movf	Lcd_PrintSubtraction@num2+1,w
   552     064A  3A80               	xorlw	128
   553     064B  0238               	subwf	??_Lcd_PrintSubtraction,w
   554     064C  1D03               	skipz
   555     064D  2E50               	goto	u255
   556     064E  0836               	movf	Lcd_PrintSubtraction@num2,w
   557     064F  0234               	subwf	Lcd_PrintSubtraction@num1,w
   558     0650                     u255:
   559     0650  1803               	skipnc
   560     0651  2E53               	goto	u251
   561     0652  2E54               	goto	u250
   562     0653                     u251:
   563     0653  2E65               	goto	l897
   564     0654                     u250:
   565     0654                     l893:
   566                           
   567                           ;class4_sub.c: 63:         Lcd_Data('-');
   568     0654  302D               	movlw	45
   569     0655  120A  118A  260C  120A  118A  	fcall	_Lcd_Data
   570     065A                     l895:
   571                           
   572                           ;class4_sub.c: 64:         sub = num2 - num1;
   573     065A  1283               	bcf	3,5	;RP0=0, select bank0
   574     065B  1303               	bcf	3,6	;RP1=0, select bank0
   575     065C  0834               	movf	Lcd_PrintSubtraction@num1,w
   576     065D  0236               	subwf	Lcd_PrintSubtraction@num2,w
   577     065E  00B9               	movwf	Lcd_PrintSubtraction@sub
   578     065F  0835               	movf	Lcd_PrintSubtraction@num1+1,w
   579     0660  1C03               	skipc
   580     0661  0A35               	incf	Lcd_PrintSubtraction@num1+1,w
   581     0662  0237               	subwf	Lcd_PrintSubtraction@num2+1,w
   582     0663  00BA               	movwf	Lcd_PrintSubtraction@sub+1
   583                           
   584                           ;class4_sub.c: 65:   } else {
   585     0664  2E75               	goto	l901
   586     0665                     l897:
   587                           
   588                           ;class4_sub.c: 66:         sub = num1 - num2;
   589     0665  1283               	bcf	3,5	;RP0=0, select bank0
   590     0666  1303               	bcf	3,6	;RP1=0, select bank0
   591     0667  0836               	movf	Lcd_PrintSubtraction@num2,w
   592     0668  0234               	subwf	Lcd_PrintSubtraction@num1,w
   593     0669  00B9               	movwf	Lcd_PrintSubtraction@sub
   594     066A  0837               	movf	Lcd_PrintSubtraction@num2+1,w
   595     066B  1C03               	skipc
   596     066C  0A37               	incf	Lcd_PrintSubtraction@num2+1,w
   597     066D  0235               	subwf	Lcd_PrintSubtraction@num1+1,w
   598     066E  00BA               	movwf	Lcd_PrintSubtraction@sub+1
   599     066F                     l899:
   600                           
   601                           ;class4_sub.c: 67:          Lcd_Data('+');
   602     066F  302B               	movlw	43
   603     0670  120A  118A  260C  120A  118A  	fcall	_Lcd_Data
   604     0675                     l901:
   605                           
   606                           ;class4_sub.c: 69:  LcdOutput(sub);
   607     0675  1283               	bcf	3,5	;RP0=0, select bank0
   608     0676  1303               	bcf	3,6	;RP1=0, select bank0
   609     0677  083A               	movf	Lcd_PrintSubtraction@sub+1,w
   610     0678  00FB               	movwf	LcdOutput@i+1
   611     0679  0839               	movf	Lcd_PrintSubtraction@sub,w
   612     067A  00FA               	movwf	LcdOutput@i
   613     067B  120A  118A  278C  120A  118A  	fcall	_LcdOutput
   614     0680                     l53:
   615     0680  0008               	return
   616     0681                     __end_of_Lcd_PrintSubtraction:
   617                           
   618                           	psect	text2
   619     078C                     __ptext2:	
   620 ;; *************** function _LcdOutput *****************
   621 ;; Defined at:
   622 ;;		line 100 in file "class4_sub.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  i               2   10[COMMON] unsigned int 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  j               1   13[COMMON] unsigned char 
   627 ;;  s               1   12[COMMON] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         2       0       0       0       0
   638 ;;      Locals:         2       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0
   640 ;;      Totals:         4       0       0       0       0
   641 ;;Total ram usage:        4 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 1
   644 ;; This function calls:
   645 ;;		_Lcd_Data
   646 ;;		___bmul
   647 ;;		___lwdiv
   648 ;; This function is called by:
   649 ;;		_main
   650 ;;		_Lcd_PrintSubtraction
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654     078C                     _LcdOutput:	
   655                           ;psect for function _LcdOutput
   656                           
   657     078C                     l835:	
   658                           ;incstack = 0
   659                           ; Regs used in _LcdOutput: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   660                           
   661                           
   662                           ;class4_sub.c: 101:     unsigned char s,j = 1;
   663     078C  3001               	movlw	1
   664     078D  00FD               	movwf	LcdOutput@j
   665     078E                     l837:
   666                           
   667                           ;class4_sub.c: 102:     m = i;
   668     078E  087B               	movf	LcdOutput@i+1,w
   669     078F  1283               	bcf	3,5	;RP0=0, select bank0
   670     0790  1303               	bcf	3,6	;RP1=0, select bank0
   671     0791  00A8               	movwf	_m+1
   672     0792  087A               	movf	LcdOutput@i,w
   673     0793  00A7               	movwf	_m
   674                           
   675                           ;class4_sub.c: 103:     while(m!=0){
   676     0794  2FC9               	goto	l847
   677     0795                     l839:
   678                           
   679                           ;class4_sub.c: 104:         s= m-((m / 10)*10);
   680     0795  30F6               	movlw	246
   681     0796  00F7               	movwf	___bmul@multiplicand
   682     0797  0828               	movf	_m+1,w
   683     0798  00F3               	movwf	___lwdiv@dividend+1
   684     0799  0827               	movf	_m,w
   685     079A  00F2               	movwf	___lwdiv@dividend
   686     079B  300A               	movlw	10
   687     079C  00F0               	movwf	___lwdiv@divisor
   688     079D  3000               	movlw	0
   689     079E  00F1               	movwf	___lwdiv@divisor+1
   690     079F  120A  118A  2681  120A  118A  	fcall	___lwdiv
   691     07A4  0870               	movf	?___lwdiv,w
   692     07A5  120A  118A  2631  120A  118A  	fcall	___bmul
   693     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   694     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   695     07AC  0727               	addwf	_m,w
   696     07AD  00FC               	movwf	LcdOutput@s
   697     07AE                     l841:
   698                           
   699                           ;class4_sub.c: 105:         k[j] = s;
   700     07AE  087D               	movf	LcdOutput@j,w
   701     07AF  3E20               	addlw	(low (_k| 0))& (0+255)
   702     07B0  0084               	movwf	4
   703     07B1  087C               	movf	LcdOutput@s,w
   704     07B2  1383               	bcf	3,7	;select IRP bank0
   705     07B3  0080               	movwf	0
   706     07B4                     l843:
   707                           
   708                           ;class4_sub.c: 106:         j++;
   709     07B4  3001               	movlw	1
   710     07B5  07FD               	addwf	LcdOutput@j,f
   711     07B6                     l845:
   712                           
   713                           ;class4_sub.c: 107:         m = m/10;
   714     07B6  300A               	movlw	10
   715     07B7  00F0               	movwf	___lwdiv@divisor
   716     07B8  3000               	movlw	0
   717     07B9  00F1               	movwf	___lwdiv@divisor+1
   718     07BA  0828               	movf	_m+1,w
   719     07BB  00F3               	movwf	___lwdiv@dividend+1
   720     07BC  0827               	movf	_m,w
   721     07BD  00F2               	movwf	___lwdiv@dividend
   722     07BE  120A  118A  2681  120A  118A  	fcall	___lwdiv
   723     07C3  0871               	movf	?___lwdiv+1,w
   724     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   725     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   726     07C6  00A8               	movwf	_m+1
   727     07C7  0870               	movf	?___lwdiv,w
   728     07C8  00A7               	movwf	_m
   729     07C9                     l847:
   730                           
   731                           ;class4_sub.c: 103:     while(m!=0){
   732     07C9  0827               	movf	_m,w
   733     07CA  0428               	iorwf	_m+1,w
   734     07CB  1D03               	btfss	3,2
   735     07CC  2FCE               	goto	u231
   736     07CD  2FCF               	goto	u230
   737     07CE                     u231:
   738     07CE  2F95               	goto	l839
   739     07CF                     u230:
   740     07CF                     l849:
   741                           
   742                           ;class4_sub.c: 109:     k[j] = '\0';
   743     07CF  087D               	movf	LcdOutput@j,w
   744     07D0  3E20               	addlw	(low (_k| 0))& (0+255)
   745     07D1  0084               	movwf	4
   746     07D2  1383               	bcf	3,7	;select IRP bank0
   747     07D3  0180               	clrf	0
   748     07D4                     l851:
   749                           
   750                           ;class4_sub.c: 110:     j=j-1;
   751     07D4  087D               	movf	LcdOutput@j,w
   752     07D5  3EFF               	addlw	255
   753     07D6  00FD               	movwf	LcdOutput@j
   754                           
   755                           ;class4_sub.c: 111:     while(j!= 0) {
   756     07D7  2FED               	goto	l859
   757     07D8                     l853:
   758                           
   759                           ;class4_sub.c: 112:        n = 0x30 +k[j];
   760     07D8  087D               	movf	LcdOutput@j,w
   761     07D9  3E20               	addlw	(low (_k| 0))& (0+255)
   762     07DA  0084               	movwf	4
   763     07DB  1383               	bcf	3,7	;select IRP bank0
   764     07DC  0800               	movf	0,w
   765     07DD  3E30               	addlw	48
   766     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   767     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   768     07E0  00A5               	movwf	_n
   769     07E1  3000               	movlw	0
   770     07E2  1803               	skipnc
   771     07E3  3001               	movlw	1
   772     07E4  00A6               	movwf	_n+1
   773     07E5                     l855:
   774                           
   775                           ;class4_sub.c: 113:        Lcd_Data(n);
   776     07E5  0825               	movf	_n,w
   777     07E6  120A  118A  260C  120A  118A  	fcall	_Lcd_Data
   778     07EB                     l857:
   779                           
   780                           ;class4_sub.c: 114:        j--;
   781     07EB  3001               	movlw	1
   782     07EC  02FD               	subwf	LcdOutput@j,f
   783     07ED                     l859:
   784                           
   785                           ;class4_sub.c: 111:     while(j!= 0) {
   786     07ED  087D               	movf	LcdOutput@j,w
   787     07EE  1D03               	btfss	3,2
   788     07EF  2FF1               	goto	u241
   789     07F0  2FF2               	goto	u240
   790     07F1                     u241:
   791     07F1  2FD8               	goto	l853
   792     07F2                     u240:
   793     07F2                     l65:
   794     07F2  0008               	return
   795     07F3                     __end_of_LcdOutput:
   796                           
   797                           	psect	text3
   798     0681                     __ptext3:	
   799 ;; *************** function ___lwdiv *****************
   800 ;; Defined at:
   801 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  divisor         2    0[COMMON] unsigned int 
   804 ;;  dividend        2    2[COMMON] unsigned int 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  quotient        2    4[COMMON] unsigned int 
   807 ;;  counter         1    6[COMMON] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2    0[COMMON] unsigned int 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         4       0       0       0       0
   818 ;;      Locals:         3       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0
   820 ;;      Totals:         7       0       0       0       0
   821 ;;Total ram usage:        7 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_LcdOutput
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830     0681                     ___lwdiv:	
   831                           ;psect for function ___lwdiv
   832                           
   833     0681                     l801:	
   834                           ;incstack = 0
   835                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   836                           
   837     0681  01F4               	clrf	___lwdiv@quotient
   838     0682  01F5               	clrf	___lwdiv@quotient+1
   839     0683                     l803:
   840     0683  0870               	movf	___lwdiv@divisor,w
   841     0684  0471               	iorwf	___lwdiv@divisor+1,w
   842     0685  1903               	btfsc	3,2
   843     0686  2E88               	goto	u161
   844     0687  2E89               	goto	u160
   845     0688                     u161:
   846     0688  2EBE               	goto	l823
   847     0689                     u160:
   848     0689                     l805:
   849     0689  3001               	movlw	1
   850     068A  00F6               	movwf	___lwdiv@counter
   851     068B  2E95               	goto	l811
   852     068C                     l807:
   853     068C  3001               	movlw	1
   854     068D                     u175:
   855     068D  1003               	clrc
   856     068E  0DF0               	rlf	___lwdiv@divisor,f
   857     068F  0DF1               	rlf	___lwdiv@divisor+1,f
   858     0690  3EFF               	addlw	-1
   859     0691  1D03               	skipz
   860     0692  2E8D               	goto	u175
   861     0693                     l809:
   862     0693  3001               	movlw	1
   863     0694  07F6               	addwf	___lwdiv@counter,f
   864     0695                     l811:
   865     0695  1FF1               	btfss	___lwdiv@divisor+1,7
   866     0696  2E98               	goto	u181
   867     0697  2E99               	goto	u180
   868     0698                     u181:
   869     0698  2E8C               	goto	l807
   870     0699                     u180:
   871     0699                     l813:
   872     0699  3001               	movlw	1
   873     069A                     u195:
   874     069A  1003               	clrc
   875     069B  0DF4               	rlf	___lwdiv@quotient,f
   876     069C  0DF5               	rlf	___lwdiv@quotient+1,f
   877     069D  3EFF               	addlw	-1
   878     069E  1D03               	skipz
   879     069F  2E9A               	goto	u195
   880     06A0  0871               	movf	___lwdiv@divisor+1,w
   881     06A1  0273               	subwf	___lwdiv@dividend+1,w
   882     06A2  1D03               	skipz
   883     06A3  2EA6               	goto	u205
   884     06A4  0870               	movf	___lwdiv@divisor,w
   885     06A5  0272               	subwf	___lwdiv@dividend,w
   886     06A6                     u205:
   887     06A6  1C03               	skipc
   888     06A7  2EA9               	goto	u201
   889     06A8  2EAA               	goto	u200
   890     06A9                     u201:
   891     06A9  2EB1               	goto	l819
   892     06AA                     u200:
   893     06AA                     l815:
   894     06AA  0870               	movf	___lwdiv@divisor,w
   895     06AB  02F2               	subwf	___lwdiv@dividend,f
   896     06AC  0871               	movf	___lwdiv@divisor+1,w
   897     06AD  1C03               	skipc
   898     06AE  03F3               	decf	___lwdiv@dividend+1,f
   899     06AF  02F3               	subwf	___lwdiv@dividend+1,f
   900     06B0                     l817:
   901     06B0  1474               	bsf	___lwdiv@quotient,0
   902     06B1                     l819:
   903     06B1  3001               	movlw	1
   904     06B2                     u215:
   905     06B2  1003               	clrc
   906     06B3  0CF1               	rrf	___lwdiv@divisor+1,f
   907     06B4  0CF0               	rrf	___lwdiv@divisor,f
   908     06B5  3EFF               	addlw	-1
   909     06B6  1D03               	skipz
   910     06B7  2EB2               	goto	u215
   911     06B8                     l821:
   912     06B8  3001               	movlw	1
   913     06B9  02F6               	subwf	___lwdiv@counter,f
   914     06BA  1D03               	btfss	3,2
   915     06BB  2EBD               	goto	u221
   916     06BC  2EBE               	goto	u220
   917     06BD                     u221:
   918     06BD  2E99               	goto	l813
   919     06BE                     u220:
   920     06BE                     l823:
   921     06BE  0875               	movf	___lwdiv@quotient+1,w
   922     06BF  00F1               	movwf	?___lwdiv+1
   923     06C0  0874               	movf	___lwdiv@quotient,w
   924     06C1  00F0               	movwf	?___lwdiv
   925     06C2                     l443:
   926     06C2  0008               	return
   927     06C3                     __end_of___lwdiv:
   928                           
   929                           	psect	text4
   930     0631                     __ptext4:	
   931 ;; *************** function ___bmul *****************
   932 ;; Defined at:
   933 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  multiplier      1    wreg     unsigned char 
   936 ;;  multiplicand    1    7[COMMON] unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  multiplier      1    9[COMMON] unsigned char 
   939 ;;  product         1    8[COMMON] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      unsigned char 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         1       0       0       0       0
   950 ;;      Locals:         2       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0
   952 ;;      Totals:         3       0       0       0       0
   953 ;;Total ram usage:        3 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_LcdOutput
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962     0631                     ___bmul:	
   963                           ;psect for function ___bmul
   964                           
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   968                           ;___bmul@multiplier stored from wreg
   969     0631  00F9               	movwf	___bmul@multiplier
   970     0632                     l787:
   971     0632  01F8               	clrf	___bmul@product
   972     0633                     l789:
   973     0633  1C79               	btfss	___bmul@multiplier,0
   974     0634  2E36               	goto	u141
   975     0635  2E37               	goto	u140
   976     0636                     u141:
   977     0636  2E39               	goto	l793
   978     0637                     u140:
   979     0637                     l791:
   980     0637  0877               	movf	___bmul@multiplicand,w
   981     0638  07F8               	addwf	___bmul@product,f
   982     0639                     l793:
   983     0639  1003               	clrc
   984     063A  0DF7               	rlf	___bmul@multiplicand,f
   985     063B                     l795:
   986     063B  1003               	clrc
   987     063C  0CF9               	rrf	___bmul@multiplier,f
   988     063D  0879               	movf	___bmul@multiplier,w
   989     063E  1D03               	btfss	3,2
   990     063F  2E41               	goto	u151
   991     0640  2E42               	goto	u150
   992     0641                     u151:
   993     0641  2E33               	goto	l789
   994     0642                     u150:
   995     0642                     l797:
   996     0642  0878               	movf	___bmul@product,w
   997     0643                     l189:
   998     0643  0008               	return
   999     0644                     __end_of___bmul:
  1000                           
  1001                           	psect	text5
  1002     060C                     __ptext5:	
  1003 ;; *************** function _Lcd_Data *****************
  1004 ;; Defined at:
  1005 ;;		line 124 in file "class4_sub.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  data            1    wreg     unsigned char 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  data            1    2[COMMON] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0
  1021 ;;      Temps:          2       0       0       0       0
  1022 ;;      Totals:         3       0       0       0       0
  1023 ;;Total ram usage:        3 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;;		_Lcd_PrintSubtraction
  1030 ;;		_LcdOutput
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034     060C                     _Lcd_Data:	
  1035                           ;psect for function _Lcd_Data
  1036                           
  1037                           
  1038                           ;incstack = 0
  1039                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0]
  1040                           ;Lcd_Data@data stored from wreg
  1041     060C  00F2               	movwf	Lcd_Data@data
  1042     060D                     l777:
  1043                           
  1044                           ;class4_sub.c: 125:     PORTC |= 0x08;
  1045     060D  1283               	bcf	3,5	;RP0=0, select bank0
  1046     060E  1303               	bcf	3,6	;RP1=0, select bank0
  1047     060F  1587               	bsf	7,3	;volatile
  1048     0610                     l779:
  1049                           
  1050                           ;class4_sub.c: 126:     PORTD = data;
  1051     0610  0872               	movf	Lcd_Data@data,w
  1052     0611  0088               	movwf	8	;volatile
  1053     0612                     l781:
  1054                           
  1055                           ;class4_sub.c: 127:     PORTC |= 0x01;
  1056     0612  1407               	bsf	7,0	;volatile
  1057     0613                     l783:
  1058                           
  1059                           ;class4_sub.c: 128:     PORTC &= ~0x01;
  1060     0613  30FE               	movlw	254
  1061     0614  0587               	andwf	7,f	;volatile
  1062     0615                     l785:
  1063                           
  1064                           ;class4_sub.c: 129:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1065     0615  30C3               	movlw	195
  1066     0616  00F1               	movwf	??_Lcd_Data+1
  1067     0617  30CD               	movlw	205
  1068     0618  00F0               	movwf	??_Lcd_Data
  1069     0619                     u267:
  1070     0619  0BF0               	decfsz	??_Lcd_Data,f
  1071     061A  2E19               	goto	u267
  1072     061B  0BF1               	decfsz	??_Lcd_Data+1,f
  1073     061C  2E19               	goto	u267
  1074     061D                     l71:
  1075     061D  0008               	return
  1076     061E                     __end_of_Lcd_Data:
  1077                           
  1078                           	psect	text6
  1079     0725                     __ptext6:	
  1080 ;; *************** function _Lcd_Init *****************
  1081 ;; Defined at:
  1082 ;;		line 72 in file "class4_sub.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0
  1099 ;;      Totals:         2       0       0       0       0
  1100 ;;Total ram usage:        2 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 1
  1103 ;; This function calls:
  1104 ;;		_Lcd_Command
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     0725                     _Lcd_Init:	
  1111                           ;psect for function _Lcd_Init
  1112                           
  1113     0725                     l861:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1116                           
  1117                           
  1118                           ;class4_sub.c: 74: TRISC = 0x00;
  1119     0725  1683               	bsf	3,5	;RP0=1, select bank1
  1120     0726  1303               	bcf	3,6	;RP1=0, select bank1
  1121     0727  0187               	clrf	7	;volatile
  1122                           
  1123                           ;class4_sub.c: 75: TRISD = 0x00;
  1124     0728  0188               	clrf	8	;volatile
  1125     0729                     l863:
  1126                           
  1127                           ;class4_sub.c: 79:     Lcd_Command(0x30);
  1128     0729  3030               	movlw	48
  1129     072A  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
  1130     072F                     l865:
  1131                           
  1132                           ;class4_sub.c: 80:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1133     072F  30C3               	movlw	195
  1134     0730  00F4               	movwf	??_Lcd_Init+1
  1135     0731  30CD               	movlw	205
  1136     0732  00F3               	movwf	??_Lcd_Init
  1137     0733                     u277:
  1138     0733  0BF3               	decfsz	??_Lcd_Init,f
  1139     0734  2F33               	goto	u277
  1140     0735  0BF4               	decfsz	??_Lcd_Init+1,f
  1141     0736  2F33               	goto	u277
  1142     0737                     l867:
  1143                           
  1144                           ;class4_sub.c: 82:     Lcd_Command(0x30);
  1145     0737  3030               	movlw	48
  1146     0738  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
  1147     073D                     l869:
  1148                           
  1149                           ;class4_sub.c: 83:      _delay((unsigned long)((100)*(6000000/4000.0)));
  1150     073D  30C3               	movlw	195
  1151     073E  00F4               	movwf	??_Lcd_Init+1
  1152     073F  30CD               	movlw	205
  1153     0740  00F3               	movwf	??_Lcd_Init
  1154     0741                     u287:
  1155     0741  0BF3               	decfsz	??_Lcd_Init,f
  1156     0742  2F41               	goto	u287
  1157     0743  0BF4               	decfsz	??_Lcd_Init+1,f
  1158     0744  2F41               	goto	u287
  1159     0745                     l871:
  1160                           
  1161                           ;class4_sub.c: 85:     Lcd_Command(0x30);
  1162     0745  3030               	movlw	48
  1163     0746  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
  1164     074B                     l873:
  1165                           
  1166                           ;class4_sub.c: 86:      _delay((unsigned long)((100)*(6000000/4000.0)));
  1167     074B  30C3               	movlw	195
  1168     074C  00F4               	movwf	??_Lcd_Init+1
  1169     074D  30CD               	movlw	205
  1170     074E  00F3               	movwf	??_Lcd_Init
  1171     074F                     u297:
  1172     074F  0BF3               	decfsz	??_Lcd_Init,f
  1173     0750  2F4F               	goto	u297
  1174     0751  0BF4               	decfsz	??_Lcd_Init+1,f
  1175     0752  2F4F               	goto	u297
  1176     0753                     l875:
  1177                           
  1178                           ;class4_sub.c: 88:     Lcd_Command(0x38);
  1179     0753  3038               	movlw	56
  1180     0754  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
  1181     0759                     l877:
  1182                           
  1183                           ;class4_sub.c: 89:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1184     0759  30C3               	movlw	195
  1185     075A  00F4               	movwf	??_Lcd_Init+1
  1186     075B  30CD               	movlw	205
  1187     075C  00F3               	movwf	??_Lcd_Init
  1188     075D                     u307:
  1189     075D  0BF3               	decfsz	??_Lcd_Init,f
  1190     075E  2F5D               	goto	u307
  1191     075F  0BF4               	decfsz	??_Lcd_Init+1,f
  1192     0760  2F5D               	goto	u307
  1193     0761                     l879:
  1194                           
  1195                           ;class4_sub.c: 91:     Lcd_Command(0x06);
  1196     0761  3006               	movlw	6
  1197     0762  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
  1198     0767                     l881:
  1199                           
  1200                           ;class4_sub.c: 92:      _delay((unsigned long)((100)*(6000000/4000.0)));
  1201     0767  30C3               	movlw	195
  1202     0768  00F4               	movwf	??_Lcd_Init+1
  1203     0769  30CD               	movlw	205
  1204     076A  00F3               	movwf	??_Lcd_Init
  1205     076B                     u317:
  1206     076B  0BF3               	decfsz	??_Lcd_Init,f
  1207     076C  2F6B               	goto	u317
  1208     076D  0BF4               	decfsz	??_Lcd_Init+1,f
  1209     076E  2F6B               	goto	u317
  1210     076F                     l883:
  1211                           
  1212                           ;class4_sub.c: 94:     Lcd_Command(0x0C);
  1213     076F  300C               	movlw	12
  1214     0770  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
  1215     0775                     l885:
  1216                           
  1217                           ;class4_sub.c: 95:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1218     0775  30C3               	movlw	195
  1219     0776  00F4               	movwf	??_Lcd_Init+1
  1220     0777  30CD               	movlw	205
  1221     0778  00F3               	movwf	??_Lcd_Init
  1222     0779                     u327:
  1223     0779  0BF3               	decfsz	??_Lcd_Init,f
  1224     077A  2F79               	goto	u327
  1225     077B  0BF4               	decfsz	??_Lcd_Init+1,f
  1226     077C  2F79               	goto	u327
  1227     077D                     l887:
  1228                           
  1229                           ;class4_sub.c: 97:     Lcd_Command(0x01);
  1230     077D  3001               	movlw	1
  1231     077E  120A  118A  261E  120A  118A  	fcall	_Lcd_Command
  1232     0783                     l889:
  1233                           
  1234                           ;class4_sub.c: 98:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1235     0783  30C3               	movlw	195
  1236     0784  00F4               	movwf	??_Lcd_Init+1
  1237     0785  30CD               	movlw	205
  1238     0786  00F3               	movwf	??_Lcd_Init
  1239     0787                     u337:
  1240     0787  0BF3               	decfsz	??_Lcd_Init,f
  1241     0788  2F87               	goto	u337
  1242     0789  0BF4               	decfsz	??_Lcd_Init+1,f
  1243     078A  2F87               	goto	u337
  1244     078B                     l56:
  1245     078B  0008               	return
  1246     078C                     __end_of_Lcd_Init:
  1247                           
  1248                           	psect	text7
  1249     061E                     __ptext7:	
  1250 ;; *************** function _Lcd_Command *****************
  1251 ;; Defined at:
  1252 ;;		line 117 in file "class4_sub.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  cmd             1    wreg     unsigned char 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  cmd             1    2[COMMON] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         1       0       0       0       0
  1268 ;;      Temps:          2       0       0       0       0
  1269 ;;      Totals:         3       0       0       0       0
  1270 ;;Total ram usage:        3 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;;		_Lcd_Init
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280     061E                     _Lcd_Command:	
  1281                           ;psect for function _Lcd_Command
  1282                           
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
  1286                           ;Lcd_Command@cmd stored from wreg
  1287     061E  00F2               	movwf	Lcd_Command@cmd
  1288     061F                     l827:
  1289                           
  1290                           ;class4_sub.c: 118:     PORTC &= ~0x08;
  1291     061F  30F7               	movlw	247
  1292     0620  1283               	bcf	3,5	;RP0=0, select bank0
  1293     0621  1303               	bcf	3,6	;RP1=0, select bank0
  1294     0622  0587               	andwf	7,f	;volatile
  1295     0623                     l829:
  1296                           
  1297                           ;class4_sub.c: 119:     PORTD = cmd;
  1298     0623  0872               	movf	Lcd_Command@cmd,w
  1299     0624  0088               	movwf	8	;volatile
  1300     0625                     l831:
  1301                           
  1302                           ;class4_sub.c: 120:     PORTC |= 0x01;
  1303     0625  1407               	bsf	7,0	;volatile
  1304     0626                     l833:
  1305                           
  1306                           ;class4_sub.c: 121:     PORTC &= ~0x01;
  1307     0626  30FE               	movlw	254
  1308     0627  0587               	andwf	7,f	;volatile
  1309                           
  1310                           ;class4_sub.c: 122:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1311     0628  30C3               	movlw	195
  1312     0629  00F1               	movwf	??_Lcd_Command+1
  1313     062A  30CD               	movlw	205
  1314     062B  00F0               	movwf	??_Lcd_Command
  1315     062C                     u347:
  1316     062C  0BF0               	decfsz	??_Lcd_Command,f
  1317     062D  2E2C               	goto	u347
  1318     062E  0BF1               	decfsz	??_Lcd_Command+1,f
  1319     062F  2E2C               	goto	u347
  1320     0630                     l68:
  1321     0630  0008               	return
  1322     0631                     __end_of_Lcd_Command:
  1323     0002                     ___latbits      equ	2
  1324     007E                     btemp           set	126	;btemp
  1325     007E                     wtemp0          set	126
  1326                           
  1327                           	psect	config
  1328                           
  1329                           ;Config register CONFIG @ 0x2007
  1330                           ;	Oscillator Selection bits
  1331                           ;	FOSC = EXTRC, RC oscillator
  1332                           ;	Watchdog Timer Enable bit
  1333                           ;	WDTE = OFF, WDT disabled
  1334                           ;	Power-up Timer Enable bit
  1335                           ;	PWRTE = OFF, PWRT disabled
  1336                           ;	Brown-out Reset Enable bit
  1337                           ;	BOREN = OFF, BOR disabled
  1338                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1339                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1340                           ;	Data EEPROM Memory Code Protection bit
  1341                           ;	CPD = OFF, Data EEPROM code protection off
  1342                           ;	Flash Program Memory Write Enable bits
  1343                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1344                           ;	In-Circuit Debugger Mode bit
  1345                           ;	DEBUG = 0x1, unprogrammed default
  1346                           ;	Flash Program Memory Code Protection bit
  1347                           ;	CP = OFF, Code protection off
  1348     2007                     	org	8199
  1349     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LcdOutput
    _Lcd_PrintSubtraction->_LcdOutput
    _LcdOutput->___bmul
    ___bmul->___lwdiv
    _Lcd_Init->_Lcd_Command

Critical Paths under _main in BANK0

    _main->_Lcd_PrintSubtraction

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1204
                          _LcdOutput
                        _Lcd_Command
                           _Lcd_Data
                           _Lcd_Init
               _Lcd_PrintSubtraction
 ---------------------------------------------------------------------------------
 (1) _Lcd_PrintSubtraction                                 7     3      4     652
                                              0 BANK0      7     3      4
                          _LcdOutput
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (2) _LcdOutput                                            4     2      2     465
                                             10 COMMON     4     2      2
                           _Lcd_Data
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     166
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     108
                                              7 COMMON     3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      29
                                              3 COMMON     2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdOutput
     _Lcd_Data
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
   _Lcd_Command
   _Lcd_Data
   _Lcd_Init
     _Lcd_Command
   _Lcd_PrintSubtraction
     _LcdOutput
     _Lcd_Data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      7      27     33.8%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      41      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 26 12:14:40 2025

                           _j 0033                             _k 0020                             _m 0027  
                           _n 0025                ___bmul@product 0078                            l53 0680  
                          l45 0721                            l46 0721                            l71 061D  
                          l56 078B                            l65 07F2                            l68 0630  
                          fsr 0004                           l443 06C2                           l189 0643  
                         l801 0681                           l811 0695                           l803 0683  
                         l821 06B8                           l813 0699                           l805 0689  
                         l901 0675                           l831 0625                           l815 06AA  
                         l807 068C                           l823 06BE                           l911 06D4  
                         l903 06C3                           l833 0626                           l817 06B0  
                         l809 0693                           l841 07AE                           l921 0700  
                         l913 06DC                           l905 06C8                           l827 061F  
                         l819 06B1                           l851 07D4                           l843 07B4  
                         l835 078C                           l923 0706                           l915 06E5  
                         l907 06CE                           l829 0623                           l861 0725  
                         l781 0612                           l853 07D8                           l845 07B6  
                         l837 078E                           l925 070C                           l917 06EB  
                         l909 06D2                           l871 0745                           l863 0729  
                         l783 0613                           l791 0637                           l855 07E5  
                         l839 0795                           l847 07C9                           l927 0712  
                         l919 06F1                           l881 0767                           l873 074B  
                         l865 072F                           l785 0615                           l777 060D  
                         l793 0639                           l857 07EB                           l849 07CF  
                         l883 076F                           l875 0753                           l867 0737  
                         l779 0610                           l795 063B                           l787 0632  
                         l859 07ED                           l891 0644                           l885 0775  
                         l877 0759                           l869 073D                           l797 0642  
                         l789 0633                           l893 0654                           l887 077D  
                         l879 0761                           l895 065A                           l889 0783  
                         l897 0665                           l899 066F                           u200 06AA  
                         u201 06A9                           u140 0637                           u220 06BE  
                         u141 0636                           u221 06BD                           u205 06A6  
                         u150 0642                           u230 07CF                           u151 0641  
                         u215 06B2                           u231 07CE                           u160 0689  
                         u240 07F2                           u161 0688                           u241 07F1  
                         u250 0654                           u307 075D                           u251 0653  
                         u180 0699                           u317 076B                           u181 0698  
                         u327 0779                           u175 068D                           u255 0650  
                         u337 0787                           u347 062C                           u267 0619  
                         u195 069A                           u277 0733                           u287 0741  
                         u297 074F                           _sub 002B                           fsr0 0004  
                         indf 0000           __end_of_Lcd_Command 0631                          _main 06C3  
                        _num1 002F                          _num2 002D                          btemp 007E  
                        start 0000       Lcd_PrintSubtraction@sub 0039             ___bmul@multiplier 0079  
                       ?_main 0070               __end_of___lwdiv 06C3                         _PORTC 0007  
                       _PORTD 0008                         _TRISC 0087                         _TRISD 0088  
        _Lcd_PrintSubtraction 0644                         _Equal 0032                         _minus 0031  
                       status 0003                         wtemp0 007E      Lcd_PrintSubtraction@num1 0034  
    Lcd_PrintSubtraction@num2 0036              __end_of_Lcd_Data 061E              __end_of_Lcd_Init 078C  
             __initialization 07F3                  __end_of_main 0725                   _Lcd_Command 061E  
                      ??_main 007E         ?_Lcd_PrintSubtraction 0034                        ___bmul 0631  
                   ??___lwdiv 0074       __end_of__initialization 07FC           ___bmul@multiplicand 0077  
           __end_of_LcdOutput 07F3                __pcstackCOMMON 0070        ??_Lcd_PrintSubtraction 0038  
                   ?_Lcd_Data 0070                     ?_Lcd_Init 0070                    __pbssBANK0 0020  
                  _delaycount 0029                    __pmaintext 06C3                       ?___bmul 0077  
                  ??_Lcd_Data 0070                    ??_Lcd_Init 0073                       ___lwdiv 0681  
                ?_Lcd_Command 0070                       __ptext1 0644                       __ptext2 078C  
                     __ptext3 0681                       __ptext4 0631                       __ptext5 060C  
                     __ptext6 0725                       __ptext7 061E                       clrloop0 0605  
        end_of_initialization 07FC                __end_of___bmul 0644                     _LcdOutput 078C  
         start_initialization 07F3                      ??___bmul 0078                    ?_LcdOutput 007A  
                   ___latbits 0002                 __pcstackBANK0 0034              ___lwdiv@dividend 0072  
                    ?___lwdiv 0070              ___lwdiv@quotient 0074                  Lcd_Data@data 0072  
                   clear_ram0 0604                   ??_LcdOutput 007C                      _Lcd_Data 060C  
                    _Lcd_Init 0725               ___lwdiv@divisor 0070               ___lwdiv@counter 0076  
__end_of_Lcd_PrintSubtraction 0681                 ??_Lcd_Command 0070                Lcd_Command@cmd 0072  
                  LcdOutput@i 007A                    LcdOutput@j 007D                    LcdOutput@s 007C  
